<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a5" title="">
  <file path="models/category_model.php" hash="4d498ce7dafc270ca52c4d0c7078cb19" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <name>Category_model</name>
      <full_name>\Category_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="16">
        <description><![CDATA[The category model]]></description>
        <long-description><![CDATA[<p>This model allows us to add, update, retrieve and delete category from category table.</p>

<p>It uses the following tables:</p>

<ul>
<li><em>Category</em></li>
<li><em>User</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="models">
        <name>add_cat</name>
        <full_name>add_cat</full_name>
        <docblock line="28">
          <description><![CDATA[Add new category.]]></description>
          <long-description><![CDATA[<p>This function will add new category to a specified field in Category tables and return category ID.</p>]]></long-description>
          <tag line="28" name="param" description="Means category-Name." type="string" variable="$catName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="Means field-ID." type="int" variable="$fieldID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="28" name="return" description="Category-ID of new inserted category." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$fieldID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="models">
        <name>update_cat</name>
        <full_name>update_cat</full_name>
        <docblock line="45">
          <description><![CDATA[Update category.]]></description>
          <long-description><![CDATA[<p>This function is used to update previouse existed category in a Category tables.</p>]]></long-description>
          <tag line="45" name="param" description="Means category-ID." type="int" variable="$catID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="45" name="param" description="Means category-Name." type="string" variable="$catName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="return" description="Category-ID of updated category." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="models">
        <name>get_categories</name>
        <full_name>get_categories</full_name>
        <docblock line="62">
          <description><![CDATA[Retrieving all category.]]></description>
          <long-description><![CDATA[<p>This function will return all categories thats belongs to a specific field from Category tables,
if no parameter passed to this function in this case it will return the whole category table.</p>]]></long-description>
          <tag line="62" name="param" description="the id of the field, if left empty retrieve" type="int" variable="$fieldID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="62" name="return" description="contains category object containing fieldID, catID and catName" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$fieldID</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="77" package="models">
        <name>delete_cat</name>
        <full_name>delete_cat</full_name>
        <docblock line="77">
          <description><![CDATA[Delete a category.]]></description>
          <long-description><![CDATA[<p>This function is used to delete a specific category from a Category tables.</p>]]></long-description>
          <tag line="77" name="param" description="Means category-ID." type="int" variable="$catID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="77" name="return" description="Category-ID of deleted row." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/answer_model.php" hash="d312a3b7865b3328b9235b946c0345a4" package="Default">
    <class final="false" abstract="false" namespace="" line="14" package="models">
      <name>Answer_model</name>
      <full_name>\Answer_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="14">
        <description><![CDATA[the answer model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Answer</em></li>
</ul>]]></long-description>
        <tag line="14" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="25" package="models">
        <name>get_answers</name>
        <full_name>get_answers</full_name>
        <docblock line="25">
          <description><![CDATA[return the answers for a question]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="25" name="param" description="the id of the question we want answers for" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="25" name="return" description="holds answer objects with fileds for all database columns" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/comment_model.php" hash="8010b5dbee132937a2b4bb995dd07cdf" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <name>Comment_model</name>
      <full_name>\Comment_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="16">
        <description><![CDATA[the comment model]]></description>
        <long-description><![CDATA[<p>Allows to retrieve and post comments for questions and answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Comment</em></li>
<li><em>User</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="models">
        <name>get_qcomments</name>
        <full_name>get_qcomments</full_name>
        <docblock line="28">
          <description><![CDATA[retrieve comments for a question]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="28" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="28" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="models">
        <name>get_acomments</name>
        <full_name>get_acomments</full_name>
        <docblock line="45">
          <description><![CDATA[retrieve comments for an answer]]></description>
          <long-description><![CDATA[<p>Returns all comments for an answer, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="45" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="45" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="models">
        <name>create_qcomment</name>
        <full_name>create_qcomment</full_name>
        <docblock line="65">
          <description><![CDATA[adds a question comment to the Comment table of database]]></description>
          <long-description><![CDATA[<p>You will pass questionID, userID and body to Comment table in database.
after inserting successfully all parameter to the database, commentID will be return from database</p>]]></long-description>
          <tag line="65" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="65" name="param" description="the userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="65" name="param" description="the body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="the id of the newly inserted comment" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="84" package="models">
        <name>create_acomment</name>
        <full_name>create_acomment</full_name>
        <docblock line="84">
          <description><![CDATA[adds a answer comment to the Comment table of database]]></description>
          <long-description><![CDATA[<p>You will pass answerID, userID and body to Comment table in database.
after inserting successfully all parameter to the database, commentID will be return from database</p>]]></long-description>
          <tag line="84" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="84" name="param" description="the userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="84" name="param" description="the body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="return" description="the id of the newly inserted comment" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="84">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="84">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="100" package="models">
        <name>update_comment</name>
        <full_name>update_comment</full_name>
        <docblock line="100">
          <description><![CDATA[Update Comments by id]]></description>
          <long-description><![CDATA[<p>this function will update the comment body.</p>]]></long-description>
          <tag line="100" name="param" description="the commentID of the comment to change" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="100" name="param" description="the new body text of the comment" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="return" description="0 if the comment was not found, 1 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="117" package="models">
        <name>delete_comment</name>
        <full_name>delete_comment</full_name>
        <docblock line="117">
          <description><![CDATA[Delete Comments by id]]></description>
          <long-description><![CDATA[<p>this function will delete the comment with the specified id.</p>]]></long-description>
          <tag line="117" name="param" description="the commentID" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="117" name="return" description="0 if the comment was not found, 1 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/field_model.php" hash="7c0977daf36476ce6e683ec1fab963b9" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="models">
      <name>Field_model</name>
      <full_name>\Field_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="12">
        <description><![CDATA[this model is for fields]]></description>
        <long-description><![CDATA[<p>Field_model: this class provide interfaces for getting
adding, deleting fields, from database, (Field) table</p>]]></long-description>
        <tag line="12" name="author" description="Sayed Ahmad Mahboobi"/>
        <tag line="12" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="23" package="models">
        <name>get_fields</name>
        <full_name>get_fields</full_name>
        <docblock line="23">
          <description><![CDATA[this function is for getting field]]></description>
          <long-description><![CDATA[<p>get_fields(): this function select all rows from Field table</p>]]></long-description>
          <tag line="23" name="author" description="Sayed Ahmad Mahbobi"/>
          <tag line="23" name="return" description="Array: it return an array of all rows in the Field table" type="\:">
            <type by_reference="false">\:</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="models">
        <name>add_field</name>
        <full_name>add_field</full_name>
        <docblock line="40">
          <description><![CDATA[it adds records in the field table]]></description>
          <long-description><![CDATA[<p>add_field(): This fuction add a new field into Field table</p>]]></long-description>
          <tag line="40" name="author" description="Sayed Ahmad Mahboobi"/>
          <tag line="40" name="param" description="(String: needs a parameter which represent a field name)" type="string" variable="$fieldName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="return" description="new_inserted_id (int: it return the new iserted field id)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$fieldName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="models">
        <name>delete_field</name>
        <full_name>delete_field</full_name>
        <docblock line="57">
          <description><![CDATA[deletes the fields]]></description>
          <long-description><![CDATA[<p>delete_field(): This fuction delete a field from field table
Function takes an arguments which will be fieldID</p>]]></long-description>
          <tag line="57" name="author" description="Sayed Ahmad Mahboobi"/>
          <tag line="57" name="param" description="(int: ID of the field to be delete)" type="int" variable="$fieldID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="57" name="return" description="void" type="\:">
            <type by_reference="false">\:</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$fieldID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/question_model.php" hash="1f3336522ab30bc8b043066df46fbd13" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <name>Question_model</name>
      <full_name>\Question_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="16">
        <description><![CDATA[the question model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for questions.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Question</em></li>
<li><em>Answer</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="models">
        <name>get_list</name>
        <full_name>get_list</full_name>
        <docblock line="43">
          <description><![CDATA[retrieve a sorted and paginated question list]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>

<p>The array <em>$filter</em> can be used to filter the result according to certain criteria. The array may contain the following keys:</p>

<ul>
<li>userID: show only questions posted by a certain user id</li>
<li>catID: show only questions in a specific category id</li>
<li>search: a search term as a string. Words separated by a whitespace are ANDed.</li>
</ul>

<p><strong>Usage Example</strong>:
get the first 10 questions matching the terms <em>php</em> and <em>apache</em> :</p>

<blockquote>
  <p>get_list(0, 10, array('search'=>'php apache'))
  get the questions 6-10 with <em>catId</em> 4
  get_list(5, 10, array('category'=>4))</p>
</blockquote>]]></long-description>
          <tag line="43" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="43" name="param" description="the amount of questions to retrieve" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="43" name="param" description="the optional filter to be applied to the results" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="43" name="return" description="holds question objects with a questionID and its title" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$limit</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="59" package="models">
        <name>get_count</name>
        <full_name>get_count</full_name>
        <docblock line="59">
          <description><![CDATA[count the questions matching a certain filter.]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="59" name="param" description="the optional filter, see the get_list documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="59" name="return" description="the amount of questions matching $filter" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="models">
        <name>get_details</name>
        <full_name>get_details</full_name>
        <docblock line="74">
          <description><![CDATA[all the information about one question.]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="74" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="74" name="return" description="a single question object, containing column values as attributes." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="89" package="models">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="89">
          <description><![CDATA[create a filter for the where-clause]]></description>
          <long-description><![CDATA[<p>A private function used by <em>get_count</em> and <em>get_list</em>. It takes the $filter$ array (as described in the <em>getlist</em> documentation)
It executes active record functions to qualify the query.</p>]]></long-description>
          <tag line="89" name="param" description="the filter, see the get_list documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="89" name="return" description="no return value" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$filter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/user_model.php" hash="4315282fefa1c6bb4e6e17cc03a22d0c" package="Default">
    <class final="false" abstract="false" namespace="" line="15" package="models">
      <name>User_model</name>
      <full_name>\User_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="15">
        <description><![CDATA[the user model]]></description>
        <long-description><![CDATA[<p>User management. CRUD for users, their types and their fields.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>User</em></li>
<li><em>UserType</em> (read only)</li>
</ul>]]></long-description>
        <tag line="15" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="30" package="models">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="30">
          <description><![CDATA[Checks if the username exists]]></description>
          <long-description><![CDATA[<p>The <em>$name</em> is compared to the <em>userName</em> in User table.</p>

<p>The <em>$password</em> is compared if it is equal to that userName's password.</p>]]></long-description>
          <tag line="30" name="author" description="Huma Yari"/>
          <tag line="30" name="param" description="The username" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="The password as md5 hash" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="return" description="the userID if exits or 0" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="models">
        <name>delete_user</name>
        <full_name>delete_user</full_name>
        <docblock line="54">
          <description><![CDATA[Deletes a user]]></description>
          <long-description><![CDATA[<p>The given userID is compared to the <em>userID</em> of the User table.</p>

<p>The user will be deleted if that userID is found.</p>]]></long-description>
          <tag line="54" name="author" description="Huma Yari"/>
          <tag line="54" name="param" description="The userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="54" name="return" description="0 if userID not found, 1 if delete successful" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="models">
        <name>add_user</name>
        <full_name>add_user</full_name>
        <docblock line="68">
          <description><![CDATA[adding new user in the User table with initial data (username,password and email address)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="author" description="Ashuqullah Alizai"/>
          <tag line="68" name="param" description="is the username for the user" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="is password specified by user" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="is email specify by user" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="the id of the newly inserted user, 0 if failed" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="models">
        <name>get_userID</name>
        <full_name>get_userID</full_name>
        <docblock line="93">
          <description><![CDATA[Get the userID for a certain userName.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="author" description="Ashuqullah Alizai"/>
          <tag line="93" name="param" description="is this name already in the database" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="return" description="the userID if username exists, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="models">
        <name>update_user</name>
        <full_name>update_user</full_name>
        <docblock line="139">
          <description><![CDATA[Update userdata]]></description>
          <long-description><![CDATA[<p>Send the user ID and the data to function. The function will find the respective ID and change user data with the data which we sent.
User data is an array. It updates the user information in table user where UserID=$uid and then returns the number of affected rows.</p>

<p>The list of columns that can be updated:</p>

<ul>
<li>usertypeID</li>
<li>fieldID</li>
<li>userName</li>
<li>fullName</li>
<li>email</li>
<li>password</li>
<li>imagePath</li>
<li>accountCreationDate</li>
<li>rank</li>
<li>lastLogin</li>
<li>organization</li>
<li>location</li>
<li>dateOfBirth</li>
<li>degree</li>
<li>detail</li>
</ul>

<p>To update columns we pass a map or associative array that associates values to keys. You can use from above list.</p>

<p><strong>Example:</strong></p>

<blockquote>
  <p>$data = array('usertypeID' => 2, 'imagePath' => '$imagepath, 'location' => '$location'Kabul');
  update_user(6, $data);</p>
</blockquote>]]></long-description>
          <tag line="139" name="param" description="the id of the user to update." type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="139" name="param" description="an associative array containing the columns to update" type="array" variable="$user_data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="139" name="return" description="1 if successful, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="139">
          <name>$user_data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="154" package="models">
        <name>get_userdata</name>
        <full_name>get_userdata</full_name>
        <docblock line="154">
          <description><![CDATA[retrieve all information about a user]]></description>
          <long-description><![CDATA[<p>Returns a user object containing information about the user, including his field and userType as a string.</p>]]></long-description>
          <tag line="154" name="param" description="" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="154" name="return" description="a user object containing all the fields of the user, additionally fieldName and userType are included as a string. If user is not found, returns false" type="object|boolean">
            <type by_reference="false">object</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="176" package="models">
        <name>change_usertype</name>
        <full_name>change_usertype</full_name>
        <docblock line="176">
          <description><![CDATA[Change the userType]]></description>
          <long-description><![CDATA[<p>changes the user with a given userID to a new userTypeID</p>]]></long-description>
          <tag line="176" name="author" description="GhezalAhmad Zia"/>
          <tag line="176" name="param" description="integer the userID" type="\$uid" variable="$uid">
            <type by_reference="false">\$uid</type>
          </tag>
          <tag line="176" name="param" description="integer the userTypeID to set" type="\$utid" variable="$utid">
            <type by_reference="false">\$utid</type>
          </tag>
          <tag line="176" name="return" description="0 if user is not found, 1 otherwise" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="176">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="176">
          <name>$utid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="193" package="models">
        <name>get_usertypes</name>
        <full_name>get_usertypes</full_name>
        <docblock line="193">
          <description><![CDATA[return user types]]></description>
          <long-description><![CDATA[<p>This function is used to return all types of users.the function takes no parameter.</p>]]></long-description>
          <tag line="193" name="author" description="saminullah sameem"/>
          <tag line="193" name="return" description="userType objects with the attributes userTypeID and userType" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="208" package="models">
        <name>get_usertype</name>
        <full_name>get_usertype</full_name>
        <docblock line="208">
          <description><![CDATA[returns specific user type.]]></description>
          <long-description><![CDATA[<p>This Function takes user_id from the user table and returns a specific type of user e.g Administrator.We have four types of users
named Administrator, Normal user,Editor and unconfirmed.</p>]]></long-description>
          <tag line="208" name="author" description="saminullah sameem"/>
          <tag line="208" name="param" description="the user's ID'" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="208" name="return" description="user data" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="models">
        <name>get_field</name>
        <full_name>get_field</full_name>
        <docblock line="224">
          <description><![CDATA[returns user field.]]></description>
          <long-description><![CDATA[<p>This function is used  to return user's field. this function takes user_id as argument and return a specific field of user. for example a user belong to
software engineering, Data base management system etc.</p>]]></long-description>
          <tag line="224" name="author" description="saminullah sameem"/>
          <tag line="224" name="return" description="user field" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="224" code="50015">Argument $uid is missing from the Docblock of get_field()</error>
    </parse_markers>
  </file>
  <file path="controllers/user.php" hash="84b92ead8e9233ec5028791c55359f08" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>User</name>
      <full_name>\User</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[the user controller]]></description>
        <long-description><![CDATA[<p>Handles logging in and registering users.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="19" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads: user_model, main_lang</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="39" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="39">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>This loads views for the registration, failed-login, etc. screens</p>]]></long-description>
          <tag line="39" name="param" description="what should appear as content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="controllers">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="65">
          <description><![CDATA[function for user login:]]></description>
          <long-description><![CDATA[<p>This function check the following condition, and perform the task
Getting values (username, password) from login form and checking it in database
also login form have an optional checkbox field (remember) this function also check
if someone checked this remember  checkbox, so it will create a cookie on client computer
which will be exist till 3 days, otherwise cookies will be delete
if user login failed so a failed(username) function will be called and this failed fuction
is counting that how much time login is failed if it was more than 3 times and new recover page
wil open to user.
if user login successfully session data will be set for this user where
userid, username, usertype, login(true, false) will store
when user data set in the sessioin the user will be redirect to the last visiting place
which will take from session data. (last_visited)</p>]]></long-description>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="controllers">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="102">
          <description><![CDATA[Fuction for loging out:]]></description>
          <long-description><![CDATA[<p>Session data of the current user will unset here:
login userid(uid) usertype username
will redirect after loging out, to the last visited place</p>]]></long-description>
          <tag line="102" name="param" description="void" type="\:" variable="">
            <type by_reference="false">\:</type>
          </tag>
          <tag line="102" name="return" description="void" type="\:">
            <type by_reference="false">\:</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="127" package="controllers">
        <name>failed</name>
        <full_name>failed</full_name>
        <docblock line="127">
          <description><![CDATA[Function to count userlogin failing:]]></description>
          <long-description><![CDATA[<p>This funciton is for counting user login failing and to show login failed page, or account recover page
It checks wheather the failed_logins variable set in the session data or not if not,
it make a failed_logins index and storing 1st time login fail or if the failed_logins
was already set in the session data it just increment it (last_value + 1)
than it set a data array to store error and username there,
This function also check if the user login failed less than 3 times it will redirect to the login_failed page
and if the login failed 3 times it will redirect user to recover page, where he/she can recoreved his/her password</p>]]></long-description>
          <tag line="127" name="Note" description=": Error message taken from Language helper class, lang('message_index'); it return the specified error&#10;message in current language."/>
          <tag line="127" name="param" description="it represent username default-value = ''" type="String" variable="$user">
            <type by_reference="false">String</type>
          </tag>
          <tag line="127" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$user</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="controllers">
        <name>register</name>
        <full_name>register</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="145" package="controllers">
        <name>recover</name>
        <full_name>recover</full_name>
        <argument line="145">
          <name>$user</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="45">Document the login(), logout() and failed() function. Change the implementation of failed() so it accepts only 3 failed password logins. After the third failed login the user should be sent to the recover page (user/recover/$username).</todo>
    </markers>
    <parse_markers>
      <notice line="102" code="50013">Parameter  could not be found in logout()</notice>
      <error line="140" code="50010">No DocBlock was found for method register()</error>
      <error line="145" code="50010">No DocBlock was found for method recover()</error>
    </parse_markers>
  </file>
  <file path="controllers/main.php" hash="9b69718f4a46da64d217d45d5c67f253" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Main</name>
      <full_name>\Main</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[the main controller]]></description>
        <long-description><![CDATA[<p>Handles the basic site functionality. Browsing questions and answers, etc.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads question_model, answer_model, main_lang.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="44" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="44">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>every complete html-page sent to the client is constructed here.
for the documentation of the $data array contents that are passed to the view
see the comments in views/main_view.php</p>]]></long-description>
          <tag line="44" name="param" description="what should appear in the body" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="controllers">
        <name>home</name>
        <full_name>home</full_name>
        <docblock line="65">
          <description><![CDATA[home view]]></description>
          <long-description><![CDATA[<p>this is where the default route and the home links will point to.
it just calls an appropriate function.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="controllers">
        <name>questions</name>
        <full_name>questions</full_name>
        <docblock line="80">
          <description><![CDATA[show a list of questions]]></description>
          <long-description><![CDATA[<p>the paginated <em>qlist</em> view is shown, representing a clickable list of questions.
clicking on a question will display its details (answers, etc.)</p>]]></long-description>
          <tag line="80" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="80" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="103" package="controllers">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="103">
          <description><![CDATA[shows a list of questions filtered after one condition]]></description>
          <long-description><![CDATA[<p>show the paginated <em>qlist</em> view with the questions matching a filter.</p>]]></long-description>
          <tag line="103" name="param" description="the filter name can be userID, catID or search" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="param" description="the parameter of the filter, can be userID, fieldID, catID or searchTerm" type="string|int" variable="$param">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$filter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$param</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="126" package="controllers">
        <name>qshow</name>
        <full_name>qshow</full_name>
        <docblock line="126">
          <description><![CDATA[show one question]]></description>
          <long-description><![CDATA[<p>the <em>qdetails</em> view is shown, representing a question and its answers.</p>]]></long-description>
          <tag line="126" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="126" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="controllers">
        <name>view</name>
        <full_name>view</full_name>
        <docblock line="146">
          <description><![CDATA[show a certain body page]]></description>
          <long-description><![CDATA[<p>this function shows a certain (static) page from the views/body directory.
use this for static content like: about, contact, terms-of-use, etc.</p>]]></long-description>
          <tag line="146" name="param" description="the name of the page (without extension) in views/body" type="string" variable="$page">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="controllers/util.php" hash="5258aab63923c523ee0799d797d73d88" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Util</name>
      <full_name>\Util</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[Utility controller]]></description>
        <long-description><![CDATA[<p>a controller containing utility functions. It uses no views but sends the user back to the last URI saved in the session.
e.g. used for changing the language globally.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="controllers">
        <name>lang</name>
        <full_name>lang</full_name>
        <docblock line="20">
          <description><![CDATA[Load a language]]></description>
          <long-description><![CDATA[<p>Changing the language my setting the session variable language.</p>]]></long-description>
          <tag line="20" name="param" description="the language to load, named like the folder containing the language files" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$language</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="controllers/test.php" hash="044cf79e53776f3f139ef751d38bb7b7" package="Default">
    <class final="false" abstract="false" namespace="" line="13" package="controllers">
      <name>Test</name>
      <full_name>\Test</full_name>
      <extends>CI_Controller</extends>
      <docblock line="13">
        <description><![CDATA[the test controller]]></description>
        <long-description><![CDATA[<p>A controller for testing model.
In the wiki there is a short howto that explains the testing process
The comments in this file however should be self-explanatory.</p>]]></long-description>
        <tag line="13" name="package" description="controllers"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="" package="Default">
        <name>$result</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads the model you want to test.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="controllers">
        <name>_remap</name>
        <full_name>_remap</full_name>
        <argument line="36">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="controllers">
        <name>_report</name>
        <full_name>_report</full_name>
        <argument line="45">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$title</name>
          <default><![CDATA['Unnamed']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="controllers">
        <name>test1</name>
        <full_name>test1</full_name>
        <argument line="55">
          <name>$a</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="69" package="controllers">
        <name>test2</name>
        <full_name>test2</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="controllers">
        <name>multitest</name>
        <full_name>multitest</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="16" code="50018">No DocBlock was found for property $result</error>
      <error line="36" code="50010">No DocBlock was found for method _remap()</error>
      <error line="45" code="50010">No DocBlock was found for method _report()</error>
      <error line="55" code="50010">No DocBlock was found for method test1()</error>
      <error line="69" code="50010">No DocBlock was found for method test2()</error>
      <error line="75" code="50010">No DocBlock was found for method multitest()</error>
    </parse_markers>
  </file>
  <file path="controllers/ajax.php" hash="fa20135f02dd1601f4aed0c4996534f2" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="controllers">
      <name>Ajax</name>
      <full_name>\Ajax</full_name>
      <extends>CI_Controller</extends>
      <docblock line="12">
        <description><![CDATA[controller for AJAX requests]]></description>
        <long-description><![CDATA[<p>This controller will handle all AJAX requests up to now.
If more AJAX-functionality is added, this should be split into thematically
organized controllers.</p>]]></long-description>
        <tag line="12" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="14" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="29" package="controllers">
        <name>qcomments</name>
        <full_name>qcomments</full_name>
        <docblock line="29">
          <description><![CDATA[asynchronously get comments for a question]]></description>
          <long-description><![CDATA[<p>calls <em>get_qcomments</em> from the comment model.
presents its data using the <em>ajax/comments</em> view.</p>]]></long-description>
          <tag line="29" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="helpers/formee_helper.php" hash="0944eccdd279a5c82829a4158dded156" package="Default">
    <constant namespace="" line="16" package="Default">
      <name>DIV_CLEAR</name>
      <full_name>\\DIV_CLEAR</full_name>
      <value><![CDATA[NULL]]></value>
    </constant>
    <function namespace="" line="11" package="Default">
      <name>formee_open</name>
      <full_name>\formee_open</full_name>
      <docblock line="11">
        <description><![CDATA[Open a Formee-form]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="11" name="param" description="Submit action URI (e.g. main/home)" type="string" variable="$action">
          <type by_reference="false">string</type>
        </tag>
        <tag line="11" name="param" description="options to pass on. class will be overwritten." type="array" variable="$options">
          <type by_reference="false">array</type>
        </tag>
        <tag line="11" name="return" description="contains html to open the form" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="11">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="11">
        <name>$options</name>
        <default><![CDATA[array()]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="24" package="Default">
      <name>formee_div</name>
      <full_name>\formee_div</full_name>
      <docblock line="24">
        <description><![CDATA[open a layout div, using Formee-layout (of12).]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="param" description="how many of 12 layout columns should the contained elements use. If 0 close a div tag." type="int" variable="$of12">
          <type by_reference="false">int</type>
        </tag>
        <tag line="24" name="param" description="clear start new row" type="bool" variable="$clear">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="24" name="return" description="contains the generated html" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="24">
        <name>$of12</name>
        <default><![CDATA[0]]></default>
        <type/>
      </argument>
      <argument line="24">
        <name>$clear</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="39" package="Default">
      <name>formee_button</name>
      <full_name>\formee_button</full_name>
      <docblock line="39">
        <description><![CDATA[create a formee submit button]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="39" name="param" description="the name and id of the button" type="string" variable="$name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="39" name="param" description="the value" type="string" variable="$value">
          <type by_reference="false">string</type>
        </tag>
        <tag line="39" name="return" description="contains the generated html" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="39">
        <name>$name</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="39">
        <name>$value</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="controllers" full_name="controllers"/>
  <package name="models" full_name="models"/>
  <namespace name="" full_name=""/>
  <marker count="1">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
