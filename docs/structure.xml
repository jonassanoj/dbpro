<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a5" title="">
  <file path="models/question_model.php" hash="2712b9c28f9fcdc349326a4a1bcc4f05" package="Default">
    <class final="false" abstract="false" namespace="" line="15" package="models">
      <name>Question_model</name>
      <full_name>\Question_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="15">
        <description><![CDATA[the question model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for questions.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Question</em></li>
<li><em>Anwer</em> (read only)</li>
</ul>]]></long-description>
        <tag line="15" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="39" package="models">
        <name>getlist</name>
        <full_name>getlist</full_name>
        <docblock line="39">
          <description><![CDATA[retrieve a sorted and paginated question list]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>

<p>The array <em>$filter</em> can be used to filter the result according to certain criteria. The array may contain the following keys:</p>

<ul>
<li>user: show only questions posted by a certain user</li>
<li>category: show only questions in a specific category</li>
<li>search: a search term as a string. Words separated by a whitespace are ANDed.</li>
</ul>

<p><strong>Usage Example</strong>:
* get the first 10 questions matching the terms <em>php</em> and <em>apache</em></p>

<blockquote>
  <p>getlist(0, 10, array('search'=>'php apache'))</p>
</blockquote>]]></long-description>
          <tag line="39" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="39" name="param" description="the amount of questions to retrieve" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="39" name="param" description="the optional filter to be applied to the results" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="return" description="holds question objects with a questionID and its title" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$limit</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="models">
        <name>getcount</name>
        <full_name>getcount</full_name>
        <docblock line="67">
          <description><![CDATA[count the questions matching a certain filter.]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>

<p>The array <em>$filter</em> can be used to filter the result according to certain criteria. The array may contain the following keys:</p>

<ul>
<li>user: show only questions posted by a certain user</li>
<li>category: show only questions in a specific category</li>
<li>search: a search term as a string. Words separated by a whitespace are ANDed.</li>
</ul>

<p><strong>Usage Example</strong>:
* get the first 10 questions matching the terms <em>php</em> and <em>apache</em></p>

<blockquote>
  <p>getlist(0, 10, array('search'=>'php apache'))</p>
</blockquote>]]></long-description>
          <tag line="67" name="param" description="the optional filter, see the {@link getlist()} documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="67" name="return" description="the amount of questions matching $filter" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="models">
        <name>getdetails</name>
        <full_name>getdetails</full_name>
        <argument line="73">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="40">implement Filter</todo>
      <todo line="68">implement Filter</todo>
    </markers>
    <parse_markers>
      <error line="73" code="50010">No DocBlock was found for method getdetails()</error>
    </parse_markers>
  </file>
  <file path="models/comment_model.php" hash="f90e9cad1959a84b535aaa4debbb7483" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <name>Comment_model</name>
      <full_name>\Comment_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="16">
        <description><![CDATA[the comment model]]></description>
        <long-description><![CDATA[<p>Allows to retrieve and post comments for questions and answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Comment</em></li>
<li><em>User</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="models">
        <name>getqcomments</name>
        <full_name>getqcomments</full_name>
        <docblock line="27">
          <description><![CDATA[retrieve comments for a question]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="27" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="27" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/answer_model.php" hash="90414063d85a9bfc04269d3e69731c60" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="models">
      <name>Answer_model</name>
      <full_name>\Answer_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="11">
        <description><![CDATA[the main controller]]></description>
        <long-description><![CDATA[<p>Handles the basic site functionality. Browsing questions and answers, etc.</p>]]></long-description>
        <tag line="11" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="13" package="models">
        <name>getanswers</name>
        <full_name>getanswers</full_name>
        <argument line="13">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="13" code="50010">No DocBlock was found for method getanswers()</error>
    </parse_markers>
  </file>
  <file path="controllers/main.php" hash="97320d84af36e94644ed01f5e7868ba7" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Main</name>
      <full_name>\Main</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[the main controller]]></description>
        <long-description><![CDATA[<p>Handles the basic site functionality. Browsing questions and answers, etc.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="19" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads: question_model, answer_model</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="46" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="46">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>every complete html-page sent to the client is constructed here.
currently, mostly defaults are sent and only the body is changed dynamically.</p>

<p>The following parts are sent in order:</p>

<ul>
<li><em>templates/header.php</em></li>
<li><em>header/default.php</em> : the default content appearing in the header</li>
<li><em>leftnav/default.php</em>: the default content of the navigation bar</li>
<li><em>body</em>/$body_view_: the body content given as a parameter</li>
<li><em>templates/footer.php</em></li>
</ul>]]></long-description>
          <tag line="46" name="param" description="what should appear in the body" type="string" variable="$body_view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$body_view</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="46">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="controllers">
        <name>home</name>
        <full_name>home</full_name>
        <docblock line="67">
          <description><![CDATA[home view]]></description>
          <long-description><![CDATA[<p>this is where the default route and the home links will point to.
it just calls an appropriate function.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="controllers">
        <name>questions</name>
        <full_name>questions</full_name>
        <docblock line="83">
          <description><![CDATA[show a list of questions]]></description>
          <long-description><![CDATA[<p>the paginated <em>qlist</em> view is shown, representing a clickable list of questions.
clicking on a question will display its details (answers, etc.)</p>]]></long-description>
          <tag line="83" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="83" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="106" package="controllers">
        <name>qshow</name>
        <full_name>qshow</full_name>
        <docblock line="106">
          <description><![CDATA[show a list of questions]]></description>
          <long-description><![CDATA[<p>the <em>qdetails</em> view is shown, representing a question and its answers.</p>]]></long-description>
          <tag line="106" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="106" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="116" package="controllers">
        <name>view</name>
        <full_name>view</full_name>
        <argument line="116">
          <name>$page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="106" code="50014">Name of argument $qid does not match with the DocBlock's name $offset in qshow()</error>
      <notice line="106" code="50013">Parameter $offset could not be found in qshow()</notice>
      <error line="116" code="50010">No DocBlock was found for method view()</error>
    </parse_markers>
  </file>
  <file path="controllers/ajax.php" hash="e1bcf5aa50cfa2fcba502f111c6468c3" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="controllers">
      <name>Ajax</name>
      <full_name>\Ajax</full_name>
      <extends>CI_Controller</extends>
      <docblock line="12">
        <description><![CDATA[controller for AJAX requests]]></description>
        <long-description><![CDATA[<p>This controller will handle all AJAX requests up to now.
If more AJAX-functionality is added, this should be split into thematically
organized controllers.</p>]]></long-description>
        <tag line="12" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="14" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="29" package="controllers">
        <name>getcomments</name>
        <full_name>getcomments</full_name>
        <docblock line="29">
          <description><![CDATA[asynchronously get comments for a question]]></description>
          <long-description><![CDATA[<p>calls <em>getqcomments</em> from the comment model.
presents its data using the <em>ajax/comments</em> view.</p>]]></long-description>
          <tag line="29" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="controllers" full_name="controllers"/>
  <package name="models" full_name="models"/>
  <namespace name="" full_name=""/>
  <marker count="2">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
