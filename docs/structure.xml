<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a5" title="">
<<<<<<< HEAD
  <file path="models/category_model.php" hash="5691fbab14550fb6f1aa1ab9033e38a8" package="Default">
    <class final="false" abstract="false" namespace="" line="18" package="models">
      <name>Category_model</name>
      <full_name>\Category_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="18">
        <description><![CDATA[The category model]]></description>
        <long-description><![CDATA[<p>This model allows us to add, update, retrieve and delete category from category table.</p>

<p>It uses the following tables:</p>

<ul>
<li><em>Category</em></li>
<li><em>Field</em> (read only)</li>
<li><em>User</em> (read only)</li>
<li><em>Question</em> (read only)</li>
</ul>]]></long-description>
        <tag line="18" name="package" description="models"/>
      </docblock>
      <constant namespace="" line="68" package="models">
        <name>ARRAY_OF_OBJECTS</name>
        <full_name>ARRAY_OF_OBJECTS</full_name>
        <value><![CDATA[0]]></value>
      </constant>
      <constant namespace="" line="69" package="models">
        <name>FLAT_ARRAY</name>
        <full_name>FLAT_ARRAY</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="" line="70" package="models">
        <name>MULTI_ARRAY</name>
        <full_name>MULTI_ARRAY</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="30" package="models">
        <name>add_cat</name>
        <full_name>add_cat</full_name>
        <docblock line="30">
          <description><![CDATA[Add new category.]]></description>
          <long-description><![CDATA[<p>This function will add new category to a specified field in Category tables and return category ID.</p>]]></long-description>
          <tag line="30" name="param" description="Means category-Name." type="string" variable="$catName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="Means field-ID." type="int" variable="$fieldID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="30" name="return" description="Category-ID of new inserted category." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$fieldID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="47" package="models">
        <name>update_cat</name>
        <full_name>update_cat</full_name>
        <docblock line="47">
          <description><![CDATA[Update category.]]></description>
          <long-description><![CDATA[<p>This function is used to update previouse existed category in a Category tables.</p>]]></long-description>
          <tag line="47" name="param" description="Means category-ID." type="int" variable="$catID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="47" name="param" description="Means category-Name." type="string" variable="$catName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="return" description="Category-ID of updated category." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="72" package="models">
        <name>get_categories</name>
        <full_name>get_categories</full_name>
        <argument line="72">
          <name>$fieldID</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$return</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="models">
        <name>get_popular</name>
        <full_name>get_popular</full_name>
        <docblock line="99">
          <description><![CDATA[Retrieve the 5 most popular Categories]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="return" description="contains category object containing fieldID, catID and catName" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="114" package="models">
        <name>delete_cat</name>
        <full_name>delete_cat</full_name>
        <docblock line="114">
          <description><![CDATA[Delete a category.]]></description>
          <long-description><![CDATA[<p>This function is used to delete a specific category from a Category tables.</p>]]></long-description>
          <tag line="114" name="param" description="Means category-ID." type="int" variable="$catID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="114" name="return" description="Category-ID of deleted row." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="100">update query to use activerecords!</todo>
    </markers>
    <parse_markers>
      <error line="72" code="50010">No DocBlock was found for method get_categories()</error>
    </parse_markers>
  </file>
  <file path="models/answer_model.php" hash="76009d3a88bfd6ae8b54642b7cd7fadb" package="Default">
    <class final="false" abstract="false" namespace="" line="14" package="models">
      <name>Answer_model</name>
      <full_name>\Answer_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="14">
        <description><![CDATA[the answer model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for answers.</p>
=======
  <file path="models/question_model.php" hash="fbbad700973265dbbe04e4ec5120c2c6" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <name>Question_model</name>
      <full_name>\Question_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="16">
        <description><![CDATA[the question model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for questions.</p>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3

<p>It uses the following database tables:</p>

<ul>
<li><em>Answer</em></li>
</ul>]]></long-description>
        <tag line="14" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="25" package="models">
        <name>get_answers</name>
        <full_name>get_answers</full_name>
        <docblock line="25">
          <description><![CDATA[return the answers for a question]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="25" name="param" description="the id of the question we want answers for" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="25" name="return" description="holds answer objects with fileds for all database columns" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="models">
        <name>delete_answer</name>
        <full_name>delete_answer</full_name>
        <docblock line="40">
          <description><![CDATA[cascading Delete answer]]></description>
          <long-description><![CDATA[<p>Delete an answer and all its associative comments to that aid in different tables.
by passing an array of table names into delete() you will delete data from more than 1 table.
at end return the number of affected rows.</p>]]></long-description>
          <tag line="40" name="param" description="the answerID." type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="40" name="return" description="number of affected rows if successful, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/comment_model.php" hash="625dd736cf20501c5b200d04b73d5fc8" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <name>Comment_model</name>
      <full_name>\Comment_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="16">
        <description><![CDATA[the comment model]]></description>
        <long-description><![CDATA[<p>Allows to retrieve and post comments for questions and answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Comment</em></li>
<li><em>User</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="models">
        <name>get_qcomments</name>
        <full_name>get_qcomments</full_name>
        <docblock line="28">
          <description><![CDATA[retrieve comments for a question]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="28" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="28" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="models">
        <name>get_acomments</name>
        <full_name>get_acomments</full_name>
        <docblock line="45">
          <description><![CDATA[retrieve comments for an answer]]></description>
          <long-description><![CDATA[<p>Returns all comments for an answer, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="45" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="45" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="models">
        <name>create_qcomment</name>
        <full_name>create_qcomment</full_name>
        <docblock line="65">
          <description><![CDATA[adds a question comment to the Comment table of database]]></description>
          <long-description><![CDATA[<p>You will pass questionID, userID and body to Comment table in database.
after inserting successfully all parameter to the database, commentID will be return from database</p>]]></long-description>
          <tag line="65" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="65" name="param" description="the userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="65" name="param" description="the body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="the id of the newly inserted comment" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="models">
        <name>get_comment</name>
        <full_name>get_comment</full_name>
        <docblock line="80">
          <description><![CDATA[get a comment by commentID]]></description>
          <long-description><![CDATA[<p>Returns a comment object identified by the commentID. It has the attributes
questionID, answerID, userID and body.</p>]]></long-description>
          <tag line="80" name="param" description="the commentID" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="80" name="return" description="false if the comment is not found, the comment object otherwise." type="object|boolean">
            <type by_reference="false">object</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="103" package="models">
        <name>create_acomment</name>
        <full_name>create_acomment</full_name>
        <docblock line="103">
          <description><![CDATA[adds a answer comment to the Comment table of database]]></description>
          <long-description><![CDATA[<p>You will pass answerID, userID and body to Comment table in database.
after inserting successfully all parameter to the database, commentID will be return from database</p>]]></long-description>
          <tag line="103" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="param" description="the userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="param" description="the body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="return" description="the id of the newly inserted comment" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
<<<<<<< HEAD
        <argument line="103">
          <name>$body</name>
=======
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="125" package="models">
        <name>delete_question</name>
        <full_name>delete_question</full_name>
        <docblock line="125">
          <description><![CDATA[cascading Delete question]]></description>
          <long-description><![CDATA[<p>Delete a question and all associative answers and comments to that qid in different tables.
by passing an array of table names into delete() you will delete data from more than 1 table
at end return the number of affected rows</p>]]></long-description>
          <tag line="125" name="param" description="the questionID." type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="125" name="return" description="number of affected rows if successful, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="142" package="models">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="142">
          <description><![CDATA[create a filter for the where-clause]]></description>
          <long-description><![CDATA[<p>A private function used by <em>get_count</em> and <em>get_list</em>. It takes the $filter$ array (as described in the <em>getlist</em> documentation)
It executes active record functions to qualify the query.</p>]]></long-description>
          <tag line="142" name="param" description="the filter, see the get_list documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="142" name="return" description="no return value" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$filter</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="models">
        <name>update_comment</name>
        <full_name>update_comment</full_name>
        <docblock line="119">
          <description><![CDATA[Update Comments by id]]></description>
          <long-description><![CDATA[<p>this function will update the comment body.</p>]]></long-description>
          <tag line="119" name="param" description="the commentID of the comment to change" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="119" name="param" description="the new body text of the comment" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="0 if the comment was not found, 1 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="119">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="135" package="models">
        <name>delete_comment</name>
        <full_name>delete_comment</full_name>
        <docblock line="135">
          <description><![CDATA[Delete Comments by id]]></description>
          <long-description><![CDATA[<p>this function will delete the comment with the specified id.</p>]]></long-description>
          <tag line="135" name="param" description="the commentID" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="135" name="return" description="0 if the comment was not found, 1 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/field_model.php" hash="3f822eac69def505088fa7d2681c1f39" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="models">
      <name>Field_model</name>
      <full_name>\Field_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="12">
        <description><![CDATA[this model is for fields]]></description>
        <long-description><![CDATA[<p>Field_model: this class provide interfaces for getting
adding, deleting fields, from database, (Field) table</p>]]></long-description>
        <tag line="12" name="author" description="Sayed Ahmad Mahboobi"/>
        <tag line="12" name="package" description="models"/>
=======
    </class>
  </file>
  <file path="models/user_model.php" hash="a1e4d3b20d314f49b413251dcbdd05b2" package="Default">
    <class final="false" abstract="false" namespace="" line="15" package="models">
      <name>User_model</name>
      <full_name>\User_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="15">
        <description><![CDATA[the user model]]></description>
        <long-description><![CDATA[<p>User management. CRUD for users, their types and their fields.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>User</em></li>
<li><em>UserType</em> (read only)</li>
</ul>]]></long-description>
        <tag line="15" name="package" description="models"/>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
      </docblock>
      <constant namespace="" line="258" package="models">
        <name>DEACTIVATE</name>
        <full_name>DEACTIVATE</full_name>
        <value><![CDATA[0]]></value>
      </constant>
      <constant namespace="" line="259" package="models">
        <name>ANONYMIZE</name>
        <full_name>ANONYMIZE</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="" line="260" package="models">
        <name>CASCADE</name>
        <full_name>CASCADE</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="30" package="models">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="30">
          <description><![CDATA[Checks if the username exists]]></description>
          <long-description><![CDATA[<p>The <em>$name</em> is compared to the <em>userName</em> in User table.</p>

<p>The <em>$password</em> is compared if it is equal to that userName's password.</p>]]></long-description>
          <tag line="30" name="author" description="Huma Yari"/>
          <tag line="30" name="param" description="The username" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="The password as md5 hash" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="return" description="the userID if exits or 0" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
    </class>
  </file>
  <file path="models/question_model.php" hash="fbbad700973265dbbe04e4ec5120c2c6" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <name>Question_model</name>
      <full_name>\Question_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="16">
        <description><![CDATA[the question model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for questions.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Question</em></li>
<li><em>Answer</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="models">
        <name>get_list</name>
        <full_name>get_list</full_name>
        <docblock line="43">
          <description><![CDATA[retrieve a sorted and paginated question list]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>

<p>The array <em>$filter</em> can be used to filter the result according to certain criteria. The array may contain the following keys:</p>

<ul>
<li>userID: show only questions posted by a certain user id</li>
<li>catID: show only questions in a specific category id</li>
<li>search: a search term as a string. Words separated by a whitespace are ANDed.</li>
</ul>

<p><strong>Usage Example</strong>:
get the first 10 questions matching the terms <em>php</em> and <em>apache</em> :</p>

<blockquote>
  <p>get_list(0, 10, array('search'=>'php apache'))
  get the questions 6-10 with <em>catId</em> 4
  get_list(5, 10, array('category'=>4))</p>
</blockquote>]]></long-description>
          <tag line="43" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="43" name="param" description="the amount of questions to retrieve" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="43" name="param" description="the optional filter to be applied to the results" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="43" name="return" description="holds question objects with a questionID and its title" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$limit</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="models">
        <name>delete_user</name>
        <full_name>delete_user</full_name>
        <docblock line="54">
          <description><![CDATA[Deletes a user]]></description>
          <long-description><![CDATA[<p>The given userID is compared to the <em>userID</em> of the User table.</p>

<p>The user will be deleted if that userID is found.</p>]]></long-description>
          <tag line="54" name="author" description="Huma Yari"/>
          <tag line="54" name="param" description="The userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="54" name="return" description="0 if userID not found, 1 if delete successful" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$uid</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="59" package="models">
        <name>get_count</name>
        <full_name>get_count</full_name>
        <docblock line="59">
          <description><![CDATA[count the questions matching a certain filter.]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="59" name="param" description="the optional filter, see the get_list documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="models">
        <name>add_user</name>
        <full_name>add_user</full_name>
        <docblock line="68">
          <description><![CDATA[adding new user in the User table with initial data (username,password and email address)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="author" description="Ashuqullah Alizai"/>
          <tag line="68" name="param" description="is the username for the user" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="is password specified by user" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="is email specify by user" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="the id of the newly inserted user, 0 if failed" type="int">
            <type by_reference="false">int</type>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          </tag>
          <tag line="59" name="return" description="the amount of questions matching $filter" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
<<<<<<< HEAD
        <argument line="59">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="models">
        <name>get_details</name>
        <full_name>get_details</full_name>
        <docblock line="74">
          <description><![CDATA[all the information about one question.]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="74" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="74" name="return" description="a single question object, containing column values as attributes." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$qid</name>
=======
        <argument line="68">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="models">
        <name>get_userID</name>
        <full_name>get_userID</full_name>
        <docblock line="93">
          <description><![CDATA[Get the userID for a certain userName.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="author" description="Ashuqullah Alizai"/>
          <tag line="93" name="param" description="is this name already in the database" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="return" description="the userID if username exists, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$username</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="89" package="models">
        <name>create_question</name>
        <full_name>create_question</full_name>
        <docblock line="89">
          <description><![CDATA[create a new question, return its id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="89" name="param" description="the question title" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="89" name="param" description="the user who created the question" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="89" name="param" description="the categoryID of the question" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="89" name="param" description="the question body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="89" name="return" description="the id of the newly inserted question, 0 if failed" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$title</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="models">
        <name>update_user</name>
        <full_name>update_user</full_name>
        <docblock line="139">
          <description><![CDATA[Update userdata]]></description>
          <long-description><![CDATA[<p>Send the user ID and the data to function. The function will find the respective ID and change user data with the data which we sent.
User data is an array. It updates the user information in table user where UserID=$uid and then returns the number of affected rows.</p>

<p>The list of columns that can be updated:</p>

<ul>
<li>usertypeID</li>
<li>fieldID</li>
<li>userName</li>
<li>fullName</li>
<li>email</li>
<li>password</li>
<li>imagePath</li>
<li>accountCreationDate</li>
<li>rank</li>
<li>lastLogin</li>
<li>organization</li>
<li>location</li>
<li>dateOfBirth</li>
<li>degree</li>
<li>detail</li>
</ul>

<p>To update columns we pass a map or associative array that associates values to keys. You can use from above list.</p>

<p><strong>Example:</strong></p>

<blockquote>
  <p>$data = array('usertypeID' => 2, 'imagePath' => '$imagepath, 'location' => '$location'Kabul');
  update_user(6, $data);</p>
</blockquote>]]></long-description>
          <tag line="139" name="param" description="the id of the user to update." type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="139" name="param" description="an associative array containing the columns to update" type="array" variable="$user_data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="139" name="return" description="1 if successful, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="139">
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
<<<<<<< HEAD
        <argument line="89">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$body</name>
=======
        <argument line="139">
          <name>$user_data</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="models">
        <name>update_question</name>
        <full_name>update_question</full_name>
        <docblock line="110">
          <description><![CDATA[Update a question]]></description>
          <long-description><![CDATA[<p>Updates a question via an associative array.</p>]]></long-description>
          <tag line="110" name="param" description="the id of the question to update." type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="110" name="param" description="an associative array containing the columns to update. For valid keys see the question table schema." type="array" variable="$question_data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="110" name="return" description="1 if successful, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$question_data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="125" package="models">
        <name>delete_question</name>
        <full_name>delete_question</full_name>
        <docblock line="125">
          <description><![CDATA[cascading Delete question]]></description>
          <long-description><![CDATA[<p>Delete a question and all associative answers and comments to that qid in different tables.
by passing an array of table names into delete() you will delete data from more than 1 table
at end return the number of affected rows</p>]]></long-description>
          <tag line="125" name="param" description="the questionID." type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="125" name="return" description="number of affected rows if successful, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="142" package="models">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="142">
          <description><![CDATA[create a filter for the where-clause]]></description>
          <long-description><![CDATA[<p>A private function used by <em>get_count</em> and <em>get_list</em>. It takes the $filter$ array (as described in the <em>getlist</em> documentation)
It executes active record functions to qualify the query.</p>]]></long-description>
          <tag line="142" name="param" description="the filter, see the get_list documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="142" name="return" description="no return value" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$filter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/vote_model.php" hash="fee6a2fee2e1dbd75891f8c76aa352eb" package="Default">
    <class final="false" abstract="false" namespace="" line="18" package="models">
      <name>Vote_model</name>
      <full_name>\Vote_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="18">
        <description><![CDATA[the vote model]]></description>
        <long-description><![CDATA[<p>Provides checking and adding votes functionality for questions and answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>QuestionVote</em></li>
<li><em>AnswerVote</em></li>
<li><em>Answer</em></li>
<li><em>Answer</em></li>
</ul>]]></long-description>
        <tag line="18" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="30" package="models">
        <name>add_q_vote</name>
        <full_name>add_q_vote</full_name>
        <docblock line="30">
          <description><![CDATA[upvote or downvote a question]]></description>
          <long-description><![CDATA[<p>Record the user who vote along with the questionID for which he/she voted.</p>]]></long-description>
          <tag line="30" name="param" description="the userID" type="int" variable="$userid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="30" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="30" name="param" description="the type of vote" type="int" variable="$vote">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$userid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$vote</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="154" package="models">
        <name>get_userdata</name>
        <full_name>get_userdata</full_name>
        <docblock line="154">
          <description><![CDATA[retrieve all information about a user]]></description>
          <long-description><![CDATA[<p>Returns a user object containing information about the user, including his field and userType as a string.</p>]]></long-description>
          <tag line="154" name="param" description="" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="154" name="return" description="a user object containing all the fields of the user, additionally fieldName and userType are included as a string. If user is not found, returns false" type="object|boolean">
            <type by_reference="false">object</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="177" package="models">
        <name>change_usertype</name>
        <full_name>change_usertype</full_name>
        <docblock line="177">
          <description><![CDATA[Change the userType]]></description>
          <long-description><![CDATA[<p>changes the user with a given userID to a new userTypeID</p>]]></long-description>
          <tag line="177" name="author" description="GhezalAhmad Zia"/>
          <tag line="177" name="param" description="the userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="177" name="param" description="the userTypeID to set" type="int" variable="$utid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="177" name="return" description="0 if user is not found, 1 otherwise." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="177">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="177">
          <name>$utid</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="models">
        <name>add_a_vote</name>
        <full_name>add_a_vote</full_name>
        <docblock line="54">
          <description><![CDATA[upvote or downvote an answer]]></description>
          <long-description><![CDATA[<p>Record the user who vote along with the answerID for which he/she voted.</p>]]></long-description>
          <tag line="54" name="param" description="the userID" type="int" variable="$userid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="54" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="54" name="param" description="the type of vote" type="int" variable="$vote">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$userid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$vote</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="193" package="models">
        <name>get_usertypes</name>
        <full_name>get_usertypes</full_name>
        <docblock line="193">
          <description><![CDATA[return user types]]></description>
          <long-description><![CDATA[<p>This function is used to return all types of users.the function takes no parameter.</p>]]></long-description>
          <tag line="193" name="author" description="saminullah sameem"/>
          <tag line="193" name="return" description="userType objects with the attributes userTypeID and userType" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="models">
        <name>get_usertype</name>
        <full_name>get_usertype</full_name>
        <docblock line="207">
          <description><![CDATA[returns specific user type.]]></description>
          <long-description><![CDATA[<p>This Function takes user_id from the user table and returns a specific type of user e.g Administrator.We have four types of users
named Administrator, Normal user,Editor and unconfirmed.</p>]]></long-description>
          <tag line="207" name="param" description="the user's ID'" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="207" name="return" description="user type ID" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$uid</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="77" package="models">
        <name>check_q_vote</name>
        <full_name>check_q_vote</full_name>
        <docblock line="77">
          <description><![CDATA[Check a user voted or did not.]]></description>
          <long-description><![CDATA[<p>Search a user voted or did not for a specific question.</p>]]></long-description>
          <tag line="77" name="param" description="the userID who want to vote." type="int" variable="$userid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="77" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="227" package="models">
        <name>get_field</name>
        <full_name>get_field</full_name>
        <docblock line="227">
          <description><![CDATA[returns user field.]]></description>
          <long-description><![CDATA[<p>This function is used  to return user's field. this function takes user_id as argument and return a specific field of user. for example a user belong to
software engineering, Data base management system etc.</p>]]></long-description>
          <tag line="227" name="author" description="saminullah sameem"/>
          <tag line="227" name="return" description="user field" type="object">
            <type by_reference="false">object</type>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          </tag>
          <tag line="77" name="return" description="a single question object, containing column values as attributes." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
<<<<<<< HEAD
        <argument line="77">
          <name>$userid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$qid</name>
=======
        <argument line="227">
          <name>$uid</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="97" package="models">
        <name>check_a_vote</name>
        <full_name>check_a_vote</full_name>
        <docblock line="97">
          <description><![CDATA[Check a user voted or did not.]]></description>
          <long-description><![CDATA[<p>Search a user voted or did not for an specific answer.</p>]]></long-description>
          <tag line="97" name="param" description="the userID who want to vote." type="int" variable="$userid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="97" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="97" name="return" description="a single question object, containing column values as attributes." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$userid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$aid</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="262" package="models">
        <name>delete</name>
        <full_name>delete</full_name>
        <argument line="262">
          <name>$uid</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="262">
          <name>$deletion_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="227" code="50015">Argument $uid is missing from the Docblock of get_field()</error>
      <error line="262" code="50010">No DocBlock was found for method delete()</error>
    </parse_markers>
  </file>
<<<<<<< HEAD
  <file path="models/user_model.php" hash="ecca1cb53ecdcb678d68b1aed06e4966" package="Default">
    <class final="false" abstract="false" namespace="" line="15" package="models">
      <name>User_model</name>
      <full_name>\User_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="15">
        <description><![CDATA[the user model]]></description>
        <long-description><![CDATA[<p>User management. CRUD for users, their types and their fields.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>User</em></li>
<li><em>UserType</em> (read only)</li>
</ul>]]></long-description>
        <tag line="15" name="package" description="models"/>
      </docblock>
      <constant namespace="" line="258" package="models">
        <name>DEACTIVATE</name>
        <full_name>DEACTIVATE</full_name>
        <value><![CDATA[0]]></value>
      </constant>
      <constant namespace="" line="259" package="models">
        <name>ANONYMIZE</name>
        <full_name>ANONYMIZE</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="" line="260" package="models">
        <name>CASCADE</name>
        <full_name>CASCADE</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="30" package="models">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="30">
          <description><![CDATA[Checks if the username exists]]></description>
          <long-description><![CDATA[<p>The <em>$name</em> is compared to the <em>userName</em> in User table.</p>

<p>The <em>$password</em> is compared if it is equal to that userName's password.</p>]]></long-description>
          <tag line="30" name="author" description="Huma Yari"/>
          <tag line="30" name="param" description="The username" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="The password as md5 hash" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="return" description="the userID if exits or 0" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$password</name>
=======
  <file path="models/field_model.php" hash="3f822eac69def505088fa7d2681c1f39" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="models">
      <name>Field_model</name>
      <full_name>\Field_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="12">
        <description><![CDATA[this model is for fields]]></description>
        <long-description><![CDATA[<p>Field_model: this class provide interfaces for getting
adding, deleting fields, from database, (Field) table</p>]]></long-description>
        <tag line="12" name="author" description="Sayed Ahmad Mahboobi"/>
        <tag line="12" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="23" package="models">
        <name>get_fields</name>
        <full_name>get_fields</full_name>
        <docblock line="23">
          <description><![CDATA[this function is for getting field]]></description>
          <long-description><![CDATA[<p>get_fields(): this function select all rows from Field table</p>]]></long-description>
          <tag line="23" name="author" description="Sayed Ahmad Mahbobi"/>
          <tag line="23" name="return" description="Array: it return an array of all rows in the Field table" type="\:">
            <type by_reference="false">\:</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="models">
        <name>add_field</name>
        <full_name>add_field</full_name>
        <docblock line="38">
          <description><![CDATA[it adds records in the field table]]></description>
          <long-description><![CDATA[<p>add_field(): This fuction add a new field into Field table</p>]]></long-description>
          <tag line="38" name="author" description="Sayed Ahmad Mahboobi"/>
          <tag line="38" name="param" description="(String: needs a parameter which represent a field name)" type="string" variable="$fieldName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="new_inserted_id (int: it return the new iserted field id)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$fieldName</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="models">
        <name>delete_user</name>
        <full_name>delete_user</full_name>
        <docblock line="54">
          <description><![CDATA[Deletes a user]]></description>
          <long-description><![CDATA[<p>The given userID is compared to the <em>userID</em> of the User table.</p>

<p>The user will be deleted if that userID is found.</p>]]></long-description>
          <tag line="54" name="author" description="Huma Yari"/>
          <tag line="54" name="param" description="The userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="54" name="return" description="0 if userID not found, 1 if delete successful" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$uid</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="models">
        <name>delete_field</name>
        <full_name>delete_field</full_name>
        <docblock line="55">
          <description><![CDATA[deletes the fields]]></description>
          <long-description><![CDATA[<p>delete_field(): This fuction delete a field from field table
Function takes an arguments which will be fieldID</p>]]></long-description>
          <tag line="55" name="author" description="Sayed Ahmad Mahboobi"/>
          <tag line="55" name="param" description="(int: ID of the field to be delete)" type="int" variable="$fieldID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="55" name="return" description="void" type="\:">
            <type by_reference="false">\:</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$fieldID</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="models">
        <name>add_user</name>
        <full_name>add_user</full_name>
        <docblock line="68">
          <description><![CDATA[adding new user in the User table with initial data (username,password and email address)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="author" description="Ashuqullah Alizai"/>
          <tag line="68" name="param" description="is the username for the user" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="is password specified by user" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="is email specify by user" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="the id of the newly inserted user, 0 if failed" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$email</name>
=======
    </class>
  </file>
  <file path="models/category_model.php" hash="c8f6267d70b7ae907ba69e23a08b44c3" package="Default">
    <class final="false" abstract="false" namespace="" line="18" package="models">
      <name>Category_model</name>
      <full_name>\Category_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="18">
        <description><![CDATA[The category model]]></description>
        <long-description><![CDATA[<p>This model allows us to add, update, retrieve and delete category from category table.</p>

<p>It uses the following tables:</p>

<ul>
<li><em>Category</em></li>
<li><em>Field</em> (read only)</li>
<li><em>User</em> (read only)</li>
<li><em>Question</em> (read only)</li>
</ul>]]></long-description>
        <tag line="18" name="package" description="models"/>
      </docblock>
      <constant namespace="" line="68" package="models">
        <name>ARRAY_OF_OBJECTS</name>
        <full_name>ARRAY_OF_OBJECTS</full_name>
        <value><![CDATA[0]]></value>
      </constant>
      <constant namespace="" line="69" package="models">
        <name>FLAT_ARRAY</name>
        <full_name>FLAT_ARRAY</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="" line="70" package="models">
        <name>MULTI_ARRAY</name>
        <full_name>MULTI_ARRAY</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="30" package="models">
        <name>add_cat</name>
        <full_name>add_cat</full_name>
        <docblock line="30">
          <description><![CDATA[Add new category.]]></description>
          <long-description><![CDATA[<p>This function will add new category to a specified field in Category tables and return category ID.</p>]]></long-description>
          <tag line="30" name="param" description="Means category-Name." type="string" variable="$catName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="Means field-ID." type="int" variable="$fieldID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="30" name="return" description="Category-ID of new inserted category." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$fieldID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="47" package="models">
        <name>update_cat</name>
        <full_name>update_cat</full_name>
        <docblock line="47">
          <description><![CDATA[Update category.]]></description>
          <long-description><![CDATA[<p>This function is used to update previouse existed category in a Category tables.</p>]]></long-description>
          <tag line="47" name="param" description="Means category-ID." type="int" variable="$catID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="47" name="param" description="Means category-Name." type="string" variable="$catName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="return" description="Category-ID of updated category." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="72" package="models">
        <name>get_categories</name>
        <full_name>get_categories</full_name>
        <argument line="72">
          <name>$fieldID</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$return</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="models">
        <name>get_popular</name>
        <full_name>get_popular</full_name>
        <docblock line="99">
          <description><![CDATA[Retrieve the 5 most popular Categories]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="return" description="contains category object containing fieldID, catID and catName" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="114" package="models">
        <name>delete_cat</name>
        <full_name>delete_cat</full_name>
        <docblock line="114">
          <description><![CDATA[Delete a category.]]></description>
          <long-description><![CDATA[<p>This function is used to delete a specific category from a Category tables.</p>]]></long-description>
          <tag line="114" name="param" description="Means category-ID." type="int" variable="$catID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="114" name="return" description="Category-ID of deleted row." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="100">update query to use activerecords!</todo>
    </markers>
    <parse_markers>
      <error line="72" code="50010">No DocBlock was found for method get_categories()</error>
    </parse_markers>
  </file>
  <file path="models/vote_model.php" hash="82762b79ee893ea149811a5de93fed71" package="Default">
    <class final="false" abstract="false" namespace="" line="18" package="models">
      <name>Vote_model</name>
      <full_name>\Vote_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="18">
        <description><![CDATA[the vote model]]></description>
        <long-description><![CDATA[<p>Provides checking and adding votes functionality for questions and answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>QuestionVote</em></li>
<li><em>AnswerVote</em></li>
<li><em>Answer</em></li>
<li><em>Answer</em></li>
</ul>]]></long-description>
        <tag line="18" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="30" package="models">
        <name>add_q_vote</name>
        <full_name>add_q_vote</full_name>
        <docblock line="30">
          <description><![CDATA[upvote or downvote a question]]></description>
          <long-description><![CDATA[<p>Record the user who vote along with the questionID for which he/she voted.</p>]]></long-description>
          <tag line="30" name="param" description="the userID" type="int" variable="$userID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="30" name="param" description="the questionID" type="int" variable="$questionID">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$userID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$questionID</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="models">
        <name>get_userID</name>
        <full_name>get_userID</full_name>
        <docblock line="93">
          <description><![CDATA[Get the userID for a certain userName.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="author" description="Ashuqullah Alizai"/>
          <tag line="93" name="param" description="is this name already in the database" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="return" description="the userID if username exists, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$username</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="63" package="models">
        <name>add_a_vote</name>
        <full_name>add_a_vote</full_name>
        <docblock line="63">
          <description><![CDATA[upvote or downvote an answer]]></description>
          <long-description><![CDATA[<p>Record the user who vote along with the answerID for which he/she voted.</p>]]></long-description>
          <tag line="63" name="param" description="the userID" type="int" variable="$userID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="63" name="param" description="the answerID" type="int" variable="$answerID">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$userID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$answerID</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="models">
        <name>update_user</name>
        <full_name>update_user</full_name>
        <docblock line="139">
          <description><![CDATA[Update userdata]]></description>
          <long-description><![CDATA[<p>Send the user ID and the data to function. The function will find the respective ID and change user data with the data which we sent.
User data is an array. It updates the user information in table user where UserID=$uid and then returns the number of affected rows.</p>

<p>The list of columns that can be updated:</p>

<ul>
<li>usertypeID</li>
<li>fieldID</li>
<li>userName</li>
<li>fullName</li>
<li>email</li>
<li>password</li>
<li>imagePath</li>
<li>accountCreationDate</li>
<li>rank</li>
<li>lastLogin</li>
<li>organization</li>
<li>location</li>
<li>dateOfBirth</li>
<li>degree</li>
<li>detail</li>
</ul>

<p>To update columns we pass a map or associative array that associates values to keys. You can use from above list.</p>

<p><strong>Example:</strong></p>

<blockquote>
  <p>$data = array('usertypeID' => 2, 'imagePath' => '$imagepath, 'location' => '$location'Kabul');
  update_user(6, $data);</p>
</blockquote>]]></long-description>
          <tag line="139" name="param" description="the id of the user to update." type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="139" name="param" description="an associative array containing the columns to update" type="array" variable="$user_data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="139" name="return" description="1 if successful, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="139">
          <name>$user_data</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="96" package="models">
        <name>check_q_vote</name>
        <full_name>check_q_vote</full_name>
        <docblock line="96">
          <description><![CDATA[Check a user voted or did not.]]></description>
          <long-description><![CDATA[<p>Search a user voted or did not for a specific question.</p>]]></long-description>
          <tag line="96" name="param" description="the userID who want to vote." type="int" variable="$userID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="96" name="param" description="the questionID" type="int" variable="$quesionID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="96" name="return" description="a single question object, containing column values as attributes." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$userID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="96">
          <name>$questionID</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="154" package="models">
        <name>get_userdata</name>
        <full_name>get_userdata</full_name>
        <docblock line="154">
          <description><![CDATA[retrieve all information about a user]]></description>
          <long-description><![CDATA[<p>Returns a user object containing information about the user, including his field and userType as a string.</p>]]></long-description>
          <tag line="154" name="param" description="" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="154" name="return" description="a user object containing all the fields of the user, additionally fieldName and userType are included as a string. If user is not found, returns false" type="object|boolean">
            <type by_reference="false">object</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="177" package="models">
        <name>change_usertype</name>
        <full_name>change_usertype</full_name>
        <docblock line="177">
          <description><![CDATA[Change the userType]]></description>
          <long-description><![CDATA[<p>changes the user with a given userID to a new userTypeID</p>]]></long-description>
          <tag line="177" name="author" description="GhezalAhmad Zia"/>
          <tag line="177" name="param" description="the userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="177" name="param" description="the userTypeID to set" type="int" variable="$utid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="177" name="return" description="0 if user is not found, 1 otherwise." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="177">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="177">
          <name>$utid</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="116" package="models">
        <name>check_a_vote</name>
        <full_name>check_a_vote</full_name>
        <docblock line="116">
          <description><![CDATA[Check a user voted or did not.]]></description>
          <long-description><![CDATA[<p>Search a user voted or did not for an specific answer.</p>]]></long-description>
          <tag line="116" name="param" description="the userID who want to vote." type="int" variable="$userID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="116" name="param" description="the answerID" type="int" variable="$answerID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="116" name="return" description="a single question object, containing column values as attributes." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$userID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="116">
          <name>$answerID</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="193" package="models">
        <name>get_usertypes</name>
        <full_name>get_usertypes</full_name>
        <docblock line="193">
          <description><![CDATA[return user types]]></description>
          <long-description><![CDATA[<p>This function is used to return all types of users.the function takes no parameter.</p>]]></long-description>
          <tag line="193" name="author" description="saminullah sameem"/>
          <tag line="193" name="return" description="userType objects with the attributes userTypeID and userType" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="models">
        <name>get_usertype</name>
        <full_name>get_usertype</full_name>
        <docblock line="207">
          <description><![CDATA[returns specific user type.]]></description>
          <long-description><![CDATA[<p>This Function takes user_id from the user table and returns a specific type of user e.g Administrator.We have four types of users
named Administrator, Normal user,Editor and unconfirmed.</p>]]></long-description>
          <tag line="207" name="param" description="the user's ID'" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="207" name="return" description="user type ID" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="227" package="models">
        <name>get_field</name>
        <full_name>get_field</full_name>
        <docblock line="227">
          <description><![CDATA[returns user field.]]></description>
          <long-description><![CDATA[<p>This function is used  to return user's field. this function takes user_id as argument and return a specific field of user. for example a user belong to
software engineering, Data base management system etc.</p>]]></long-description>
          <tag line="227" name="author" description="saminullah sameem"/>
          <tag line="227" name="return" description="user field" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="227">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="262" package="models">
        <name>delete</name>
        <full_name>delete</full_name>
        <argument line="262">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="262">
          <name>$deletion_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="227" code="50015">Argument $uid is missing from the Docblock of get_field()</error>
      <error line="262" code="50010">No DocBlock was found for method delete()</error>
    </parse_markers>
  </file>
  <file path="controllers/edit.php" hash="dea433d848f42d77644ed398aa5312e0" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Edit</name>
      <full_name>\Edit</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[the edit controller]]></description>
        <long-description><![CDATA[<p>Handles forms to ask, answer and edit questions, answers and comments</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads question_model, answer_model, comment_model, main_lang.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="48">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>every complete html-page sent to the client is constructed here.
for the documentation of the $data array contents that are passed to the view
see the comments in views/main_view.php</p>]]></long-description>
          <tag line="48" name="param" description="what should appear in the body" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$data</name>
=======
    </class>
    <parse_markers>
      <error line="96" code="50014">Name of argument $questionID does not match with the DocBlock's name $quesionID in check_q_vote()</error>
      <notice line="96" code="50013">Parameter $quesionID could not be found in check_q_vote()</notice>
    </parse_markers>
  </file>
  <file path="models/comment_model.php" hash="625dd736cf20501c5b200d04b73d5fc8" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <name>Comment_model</name>
      <full_name>\Comment_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="16">
        <description><![CDATA[the comment model]]></description>
        <long-description><![CDATA[<p>Allows to retrieve and post comments for questions and answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Comment</em></li>
<li><em>User</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="models">
        <name>get_qcomments</name>
        <full_name>get_qcomments</full_name>
        <docblock line="28">
          <description><![CDATA[retrieve comments for a question]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="28" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="28" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="models">
        <name>get_acomments</name>
        <full_name>get_acomments</full_name>
        <docblock line="45">
          <description><![CDATA[retrieve comments for an answer]]></description>
          <long-description><![CDATA[<p>Returns all comments for an answer, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="45" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="45" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$aid</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="controllers">
        <name>question</name>
        <full_name>question</full_name>
        <docblock line="67">
          <description><![CDATA[Create a new question or edit an existing one]]></description>
          <long-description><![CDATA[<p>This Method is used to  checke the user questions, if the question  belongs to the current user, then the form will display with content of current quesiton
The form will contain Question Title, Question Body and a drop down list for choosing category of the question
if the user update the question the form first would be validated according to the pre existed rules of the form validation
if the user entered valid data then the quesiton will be created or edited.
If the quesiton does not belongs to the user the user will be redirected to the last visited page</p>]]></long-description>
          <tag line="67" name="author" description="Abdulaziz Akbary and Hamidullah Khanzai"/>
          <tag line="67" name="param" description="the id of the question to edit. if left blank, create a new question." type="int" variable="$qid">
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="models">
        <name>create_qcomment</name>
        <full_name>create_qcomment</full_name>
        <docblock line="65">
          <description><![CDATA[adds a question comment to the Comment table of database]]></description>
          <long-description><![CDATA[<p>You will pass questionID, userID and body to Comment table in database.
after inserting successfully all parameter to the database, commentID will be return from database</p>]]></long-description>
          <tag line="65" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="65" name="param" description="the userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="65" name="param" description="the body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="the id of the newly inserted comment" type="int">
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
            <type by_reference="false">int</type>
          </tag>
          <tag line="67" name="retrun" description="void The user will redirecte to the new edited or inserted question to qshow page."/>
        </docblock>
<<<<<<< HEAD
        <argument line="67">
=======
        <argument line="65">
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="149" package="controllers">
        <name>answer</name>
        <full_name>answer</full_name>
        <docblock line="149">
          <description><![CDATA[create a new answer or edit an existing one]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="149" name="param" description="the id of the question to answer." type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="149" name="param" description="optional, the id of the answer, if left blank, create a new answer." type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="149">
          <name>$aid</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="167" package="controllers">
        <name>comment</name>
        <full_name>comment</full_name>
        <docblock line="167">
          <description><![CDATA[Creates a new comment or edits an existing one]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="167" name="author" description="Foawziah and Huma"/>
          <tag line="167" name="param" description="the id of the question to comment on" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="167" name="param" description="the id of the answer" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="167" name="param" description="optional, the commentID, if left blank, create a new comment" type="int" variable="$cid">
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="models">
        <name>get_comment</name>
        <full_name>get_comment</full_name>
        <docblock line="80">
          <description><![CDATA[get a comment by commentID]]></description>
          <long-description><![CDATA[<p>Returns a comment object identified by the commentID. It has the attributes
questionID, answerID, userID and body.</p>]]></long-description>
          <tag line="80" name="param" description="the commentID" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="80" name="return" description="false if the comment is not found, the comment object otherwise." type="object|boolean">
            <type by_reference="false">object</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="103" package="models">
        <name>create_acomment</name>
        <full_name>create_acomment</full_name>
        <docblock line="103">
          <description><![CDATA[adds a answer comment to the Comment table of database]]></description>
          <long-description><![CDATA[<p>You will pass answerID, userID and body to Comment table in database.
after inserting successfully all parameter to the database, commentID will be return from database</p>]]></long-description>
          <tag line="103" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="param" description="the userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="param" description="the body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="return" description="the id of the newly inserted comment" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="models">
        <name>update_comment</name>
        <full_name>update_comment</full_name>
        <docblock line="119">
          <description><![CDATA[Update Comments by id]]></description>
          <long-description><![CDATA[<p>this function will update the comment body.</p>]]></long-description>
          <tag line="119" name="param" description="the commentID of the comment to change" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="119" name="param" description="the new body text of the comment" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="0 if the comment was not found, 1 otherwise" type="int">
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
            <type by_reference="false">int</type>
          </tag>
          <tag line="167" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
<<<<<<< HEAD
        <argument line="167">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="167">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="167">
=======
        <argument line="119">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="119">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="135" package="models">
        <name>delete_comment</name>
        <full_name>delete_comment</full_name>
        <docblock line="135">
          <description><![CDATA[Delete Comments by id]]></description>
          <long-description><![CDATA[<p>this function will delete the comment with the specified id.</p>]]></long-description>
          <tag line="135" name="param" description="the commentID" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="135" name="return" description="0 if the comment was not found, 1 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="135">
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="221" package="controllers">
        <name>process_comment</name>
        <full_name>process_comment</full_name>
        <docblock line="221">
          <description><![CDATA[Processes the 'create' and 'update' functionalities]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="221" name="author" description="Foawziah and Huma"/>
          <tag line="221" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="311" package="controllers">
        <name>vote</name>
        <full_name>vote</full_name>
        <docblock line="311">
          <description><![CDATA[vote a question or answer up or down]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="311" name="param" description="the id of the question to vote on, can be 0 if $aid is given" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="311" name="param" description="the id of the answer, can be 0 if $qid is given" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="311" name="param" description="optional, if set and true vote down, else vote up" type="boolean" variable="$votedown">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="311">
=======
    </class>
  </file>
  <file path="models/answer_model.php" hash="bb7753b0259460d034ca847fb55ee4df" package="Default">
    <class final="false" abstract="false" namespace="" line="14" package="models">
      <name>Answer_model</name>
      <full_name>\Answer_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="14">
        <description><![CDATA[the answer model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Answer</em></li>
</ul>]]></long-description>
        <tag line="14" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="25" package="models">
        <name>get_answers</name>
        <full_name>get_answers</full_name>
        <docblock line="25">
          <description><![CDATA[return the answers for a question]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="25" name="param" description="the id of the question we want answers for" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="25" name="return" description="holds answer objects with fileds for all database columns" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="models">
        <name>add_answer</name>
        <full_name>add_answer</full_name>
        <docblock line="40">
          <description><![CDATA[Adding new answer to a question]]></description>
          <long-description><![CDATA[<p>This function is for adding a new answer to a question by a registered user.</p>]]></long-description>
          <tag line="40" name="param" description="the question id" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="40" name="param" description="the user id who want to answer" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="40" name="param" description="the answer text" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="return" description="true if inserted otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="40">
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
<<<<<<< HEAD
        <argument line="311">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="311">
          <name>$votedown</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="135">check if $qid is the user's question, otherwise send the user back where he came from (hint: see controllers/user.php for how to do this)</todo>
      <todo line="151">check if $aid is the user's answer, otherwise send the user back where he came from</todo>
      <todo line="184">localize</todo>
      <todo line="205">localize</todo>
      <todo line="231">localize</todo>
      <todo line="312">implement this function and everything need for it to work</todo>
    </markers>
  </file>
  <file path="controllers/user.php" hash="a93c68793056c0e2ebe85bd20adc2b1a" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>User</name>
      <full_name>\User</full_name>
=======
        <argument line="40">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="64" package="models">
        <name>update_answer</name>
        <full_name>update_answer</full_name>
        <docblock line="64">
          <description><![CDATA[updating answer]]></description>
          <long-description><![CDATA[<p>This function is for updating an existing answer by its owner (writer).</p>]]></long-description>
          <tag line="64" name="param" description="the answer id (only we need answer id because its already primary key)" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="64" name="param" description="the answer text" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="true if inserted otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="models">
        <name>delete_answer</name>
        <full_name>delete_answer</full_name>
        <docblock line="81">
          <description><![CDATA[cascading Delete answer]]></description>
          <long-description><![CDATA[<p>Delete an answer and all its associative comments to that aid in different tables.
by passing an array of table names into delete() you will delete data from more than 1 table.
at end return the number of affected rows.</p>]]></long-description>
          <tag line="81" name="param" description="the answerID." type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="81" name="return" description="number of affected rows if successful, 0 otherwise" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="98" package="models">
        <name>is_user_answer</name>
        <full_name>is_user_answer</full_name>
        <docblock line="98">
          <description><![CDATA[Helper function for checking user's answer]]></description>
          <long-description><![CDATA[<p>This is a function to check weather a answer related to a user or not.</p>]]></long-description>
          <tag line="98" name="param" description="the answer id (to check is the answer related to this user or not)" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="98" name="param" description="the user id, for an answer" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="98" name="return" description="true if inserted otherwise false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="controllers/util.php" hash="1b294e16305e33b95973859b1a8017f8" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Util</name>
      <full_name>\Util</full_name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[Utility controller]]></description>
        <long-description><![CDATA[<p>a controller containing utility functions. It uses no views but sends the user back to the last URI saved in the session.
e.g. used for changing the language globally.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads vote_model.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="controllers">
        <name>lang</name>
        <full_name>lang</full_name>
        <docblock line="36">
          <description><![CDATA[Load a language]]></description>
          <long-description><![CDATA[<p>Changing the language my setting the session variable language.</p>]]></long-description>
          <tag line="36" name="param" description="the language to load, named like the folder containing the language files" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$language</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="controllers">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="65">
          <description><![CDATA[function for user login:]]></description>
          <long-description><![CDATA[<p>This function check the following condition, and perform the task
Getting values (username, password) from login form and checking it in database
also login form have an optional checkbox field (remember) this function also check
if someone checked this remember  checkbox, so it will create a cookie on client computer
which will be exist till 3 days, otherwise cookies will be delete
if user login failed so a failed(username) function will be called and this failed fuction
is counting that how much time login is failed if it was more than 3 times and new recover page
will open to user.
if user login successfully session data will be set for this user where
userid, username, usertype, login(true, false) will store
when user data set in the sessioin the user will be redirect to the last visiting place
which will take from session data. (last_visited)</p>]]></long-description>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="controllers">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="102">
          <description><![CDATA[Function for logging out:]]></description>
          <long-description><![CDATA[<p>Session data of the current user will unset here:
login userid(uid) usertype username
will redirect after loging out, to the last visited place</p>]]></long-description>
          <tag line="102" name="param" description="void" type="\:" variable="">
            <type by_reference="false">\:</type>
          </tag>
          <tag line="102" name="return" description="void" type="\:">
            <type by_reference="false">\:</type>
          </tag>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="controllers">
        <name>q_vote</name>
        <full_name>q_vote</full_name>
        <docblock line="48">
          <description><![CDATA[Add vote for a question]]></description>
          <long-description><![CDATA[<p>Check user to find out  did he/she voted for a specific question, if not add his/her vote.</p>]]></long-description>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="controllers">
        <name>a_vote</name>
        <full_name>a_vote</full_name>
        <docblock line="68">
          <description><![CDATA[Add vote for an answer]]></description>
          <long-description><![CDATA[<p>Check user to find out did he/she voted for an specific answer, if not add his/her vote.</p>]]></long-description>
        </docblock>
      </method>
    </class>
  </file>
<<<<<<< HEAD
  <file path="controllers/main.php" hash="94a70afbfa645273c166affe16ed6d79" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Main</name>
      <full_name>\Main</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[the main controller]]></description>
        <long-description><![CDATA[<p>Handles the basic site functionality. Browsing questions and answers, etc.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads question_model, answer_model, main_lang.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="46" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="46">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>every complete html-page sent to the client is constructed here.
for the documentation of the $data array contents that are passed to the view
see the comments in views/main_view.php</p>]]></long-description>
          <tag line="46" name="param" description="what should appear in the body" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="46">
          <name>$data</name>
=======
  <file path="controllers/admin.php" hash="ced58f6b1db62b491b423f9fd16ae9d1" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="controllers">
      <name>Admin</name>
      <full_name>\Admin</full_name>
      <extends>CI_Controller</extends>
      <docblock line="12">
        <description><![CDATA[the admin controller]]></description>
        <long-description><![CDATA[<p>Handles the basic admin functionality. List Users,upgrade usere's privileges, delete users, update users data,add new user, list onsite users</p>]]></long-description>
        <tag line="12" name="package" description="controllers"/>
        <tag line="12" name="author" description="Ashuqullah Alizai &amp; Ghezal Ahmad Zai"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="15" namespace="" package="Default">
        <name>$limit</name>
        <default><![CDATA[10]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads user_model, helper , main_lang, session library , table library</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="49" package="controllers">
        <name>index</name>
        <full_name>index</full_name>
        <docblock line="49">
          <description><![CDATA[main function]]></description>
          <long-description><![CDATA[<p>this funciton will check the userdata from session,if the user is admin it will access the admin table if not will redirect to main/home view</p>]]></long-description>
          <tag line="49" name="author" description="Ashuqullah Alziai/ghezal"/>
          <tag line="49" name="param" description="" type="\unknown_type" variable="$offset">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="49" name="return" description="load views" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="71" package="controllers">
        <name>mainf</name>
        <full_name>mainf</full_name>
        <docblock line="71">
          <description><![CDATA[list all user in the data base]]></description>
          <long-description><![CDATA[<p>this function will list all user with it is premarly data('Name', 'User Name', 'Email', 'Orgonization','Degree','User Type','Study Field') in a table and will load the personList view</p>]]></long-description>
          <tag line="71" name="param" description="" type="\int_type" variable="$offset">
            <type by_reference="false">\int_type</type>
          </tag>
          <tag line="71" name="author" description="Ashuqullah Alizai"/>
          <tag line="71" name="return" description="load the personList view" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="125" package="controllers">
        <name>upgrade</name>
        <full_name>upgrade</full_name>
        <docblock line="125">
          <description><![CDATA[retrive current privileges for user]]></description>
          <long-description><![CDATA[<p>this function is for retreving the current privileges data of the user and will load the upgrade view</p>]]></long-description>
          <tag line="125" name="author" description="alizai"/>
          <tag line="125" name="return" description="load upgrade view" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$uid</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="59" package="controllers">
        <name>home</name>
        <full_name>home</full_name>
        <docblock line="59">
          <description><![CDATA[home view]]></description>
          <long-description><![CDATA[<p>this is where the default route and the home links will point to.
it just calls an appropriate function.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="controllers">
        <name>questions</name>
        <full_name>questions</full_name>
        <docblock line="74">
          <description><![CDATA[show a list of questions]]></description>
          <long-description><![CDATA[<p>the paginated <em>qlist</em> view is shown, representing a clickable list of questions.
clicking on a question will display its details (answers, etc.)</p>]]></long-description>
          <tag line="74" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="74" name="return" description="" type="void">
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="149" package="controllers">
        <name>ugrade_user</name>
        <full_name>ugrade_user</full_name>
        <docblock line="149">
          <description><![CDATA[upgrade user privileges]]></description>
          <long-description><![CDATA[<p>this function is for upgrading user privileges as per admin decision from one level to other</p>]]></long-description>
          <tag line="149" name="author" description="Alizai"/>
          <tag line="149" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="176" package="controllers">
        <name>online</name>
        <full_name>online</full_name>
        <docblock line="176">
          <description><![CDATA[show onsite user]]></description>
          <long-description><![CDATA[<p>this function will load the view that will show the user name of the online user and the ip fro un registerd user</p>]]></long-description>
          <tag line="176" name="return" description="" type="void">
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
            <type by_reference="false">void</type>
          </tag>
          <tag line="176" name="author" description="ashuqullah alizai&amp;ghezal Ahmadzai"/>
        </docblock>
<<<<<<< HEAD
        <argument line="74">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="97" package="controllers">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="97">
          <description><![CDATA[shows a list of questions filtered after one condition]]></description>
          <long-description><![CDATA[<p>show the paginated <em>qlist</em> view with the questions matching a filter.</p>]]></long-description>
          <tag line="97" name="param" description="the filter name can be userID, catID or search" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="the parameter of the filter, can be userID, fieldID, catID or searchTerm" type="string|int" variable="$param">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="97" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="97" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$filter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$param</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="controllers">
        <name>qshow</name>
        <full_name>qshow</full_name>
        <docblock line="120">
          <description><![CDATA[show one question]]></description>
          <long-description><![CDATA[<p>the <em>qdetails</em> view is shown, representing a question and its answers.</p>]]></long-description>
          <tag line="120" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="controllers">
        <name>view</name>
        <full_name>view</full_name>
        <docblock line="140">
          <description><![CDATA[show a certain body page]]></description>
          <long-description><![CDATA[<p>this function shows a certain (static) page from the views/body directory.
use this for static content like: about, contact, terms-of-use, etc.</p>]]></long-description>
          <tag line="140" name="param" description="the name of the page (without extension) in views/body" type="string" variable="$page">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="160" package="controllers">
        <name>view_account</name>
        <full_name>view_account</full_name>
        <docblock line="160">
          <description><![CDATA[shows the User Account Information]]></description>
          <long-description><![CDATA[<p>this function will retreive account data from the database about the logged in user
first it will check if the user is logged in or not and than will retrieve each field into the array
this will than load the my_account form and pass the array created from the user account data</p>]]></long-description>
          <tag line="160" name="param" description="" type="" variable=""/>
          <tag line="160" name="return" description="Author Sayed Ahmad" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <notice line="160" code="50013">Parameter  could not be found in view_account()</notice>
    </parse_markers>
  </file>
  <file path="controllers/util.php" hash="8e3f8bb8aa010e973f2dd6de0b284288" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Util</name>
      <full_name>\Util</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[Utility controller]]></description>
        <long-description><![CDATA[<p>a controller containing utility functions. It uses no views but sends the user back to the last URI saved in the session.
e.g. used for changing the language globally.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="21" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads vote_model.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="34" package="controllers">
        <name>lang</name>
        <full_name>lang</full_name>
        <docblock line="34">
          <description><![CDATA[Load a language]]></description>
          <long-description><![CDATA[<p>Changing the language my setting the session variable language.</p>]]></long-description>
          <tag line="34" name="param" description="the language to load, named like the folder containing the language files" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$language</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="controllers">
        <name>q_vote</name>
        <full_name>q_vote</full_name>
        <docblock line="48">
          <description><![CDATA[Add vote for a question]]></description>
          <long-description><![CDATA[<p>Check user to find out  did he/she voted for a specific question, if not add his/her vote.</p>]]></long-description>
          <tag line="48" name="param" description="the questionID that user want to vote." type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="controllers">
        <name>a_vote</name>
        <full_name>a_vote</full_name>
        <docblock line="75">
          <description><![CDATA[Add vote for an answer]]></description>
          <long-description><![CDATA[<p>Check user to find out did he/she voted for an specific answer, if not add his/her vote.</p>]]></long-description>
          <tag line="75" name="param" description="the answerID that user want to vote." type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="controllers/test.php" hash="8c3e4a7a14f798c44ac3b0df98425b51" package="Default">
    <class final="false" abstract="false" namespace="" line="13" package="controllers">
      <name>Test</name>
      <full_name>\Test</full_name>
      <extends>CI_Controller</extends>
      <docblock line="13">
        <description><![CDATA[the test controller]]></description>
        <long-description><![CDATA[<p>A controller for testing model.
In the wiki there is a short howto that explains the testing process
The comments in this file however should be self-explanatory.</p>]]></long-description>
        <tag line="13" name="package" description="controllers"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="" package="Default">
        <name>$result</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads the model you want to test.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="controllers">
        <name>_remap</name>
        <full_name>_remap</full_name>
        <argument line="36">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="controllers">
        <name>_report</name>
        <full_name>_report</full_name>
        <argument line="45">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$title</name>
          <default><![CDATA['Unnamed']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="controllers">
        <name>test1</name>
        <full_name>test1</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="controllers">
        <name>test2</name>
        <full_name>test2</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="controllers">
        <name>multitest</name>
        <full_name>multitest</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="16" code="50018">No DocBlock was found for property $result</error>
      <error line="36" code="50010">No DocBlock was found for method _remap()</error>
      <error line="45" code="50010">No DocBlock was found for method _report()</error>
      <error line="55" code="50010">No DocBlock was found for method test1()</error>
      <error line="70" code="50010">No DocBlock was found for method test2()</error>
      <error line="76" code="50010">No DocBlock was found for method multitest()</error>
    </parse_markers>
  </file>
  <file path="controllers/admin.php" hash="ced58f6b1db62b491b423f9fd16ae9d1" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="controllers">
      <name>Admin</name>
      <full_name>\Admin</full_name>
      <extends>CI_Controller</extends>
      <docblock line="12">
        <description><![CDATA[the admin controller]]></description>
        <long-description><![CDATA[<p>Handles the basic admin functionality. List Users,upgrade usere's privileges, delete users, update users data,add new user, list onsite users</p>]]></long-description>
        <tag line="12" name="package" description="controllers"/>
        <tag line="12" name="author" description="Ashuqullah Alizai &amp; Ghezal Ahmad Zai"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="15" namespace="" package="Default">
        <name>$limit</name>
        <default><![CDATA[10]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads user_model, helper , main_lang, session library , table library</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="49" package="controllers">
        <name>index</name>
        <full_name>index</full_name>
        <docblock line="49">
          <description><![CDATA[main function]]></description>
          <long-description><![CDATA[<p>this funciton will check the userdata from session,if the user is admin it will access the admin table if not will redirect to main/home view</p>]]></long-description>
          <tag line="49" name="author" description="Ashuqullah Alziai/ghezal"/>
          <tag line="49" name="param" description="" type="\unknown_type" variable="$offset">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="49" name="return" description="load views" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="71" package="controllers">
        <name>mainf</name>
        <full_name>mainf</full_name>
        <docblock line="71">
          <description><![CDATA[list all user in the data base]]></description>
          <long-description><![CDATA[<p>this function will list all user with it is premarly data('Name', 'User Name', 'Email', 'Orgonization','Degree','User Type','Study Field') in a table and will load the personList view</p>]]></long-description>
          <tag line="71" name="param" description="" type="\int_type" variable="$offset">
            <type by_reference="false">\int_type</type>
          </tag>
          <tag line="71" name="author" description="Ashuqullah Alizai"/>
          <tag line="71" name="return" description="load the personList view" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="125" package="controllers">
        <name>upgrade</name>
        <full_name>upgrade</full_name>
        <docblock line="125">
          <description><![CDATA[retrive current privileges for user]]></description>
          <long-description><![CDATA[<p>this function is for retreving the current privileges data of the user and will load the upgrade view</p>]]></long-description>
          <tag line="125" name="author" description="alizai"/>
          <tag line="125" name="return" description="load upgrade view" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="149" package="controllers">
        <name>ugrade_user</name>
        <full_name>ugrade_user</full_name>
        <docblock line="149">
          <description><![CDATA[upgrade user privileges]]></description>
          <long-description><![CDATA[<p>this function is for upgrading user privileges as per admin decision from one level to other</p>]]></long-description>
          <tag line="149" name="author" description="Alizai"/>
          <tag line="149" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="176" package="controllers">
        <name>online</name>
        <full_name>online</full_name>
        <docblock line="176">
          <description><![CDATA[show onsite user]]></description>
          <long-description><![CDATA[<p>this function will load the view that will show the user name of the online user and the ip fro un registerd user</p>]]></long-description>
          <tag line="176" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="176" name="author" description="ashuqullah alizai&amp;ghezal Ahmadzai"/>
        </docblock>
      </method>
=======
      </method>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="223" package="controllers">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="223">
          <description><![CDATA[add new user view]]></description>
          <long-description><![CDATA[<p>this function will load the addUser view for adding user data and than load the addUser function to store the data in to the database</p>]]></long-description>
          <tag line="223" name="author" description="Ashuqullah Alizai"/>
          <tag line="223" name="return" description="" type="void">
            <type by_reference="false">void</type>
<<<<<<< HEAD
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="248" package="controllers">
        <name>addUser</name>
        <full_name>addUser</full_name>
        <docblock line="248">
          <description><![CDATA[add new user]]></description>
          <long-description><![CDATA[<p>this function is to create new user it will get the data for user from the addUser view and send to data base</p>]]></long-description>
          <tag line="248" name="author" description="alizai"/>
          <tag line="248" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="296" package="controllers">
        <name>view</name>
        <full_name>view</full_name>
        <docblock line="296">
          <description><![CDATA[show user details]]></description>
          <long-description><![CDATA[<p>this function will show details of the user with <em>id</em> specifyed as parameter</p>]]></long-description>
          <tag line="296" name="author" description="Ashuqullah Alizai"/>
          <tag line="296" name="param" description="is user ID" type="\int_type" variable="$id">
            <type by_reference="false">\int_type</type>
          </tag>
        </docblock>
        <argument line="296">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="321" package="controllers">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="321">
          <description><![CDATA[retrive current data for update]]></description>
          <long-description><![CDATA[<p>this function will retrive existing data for a user with given id <em>$id</em> for updating and will load the data in the update view</p>]]></long-description>
          <tag line="321" name="param" description="is user ID" type="\int_type" variable="$id">
            <type by_reference="false">\int_type</type>
          </tag>
          <tag line="321" name="author" description="Alizai"/>
          <tag line="321" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="321">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="360" package="controllers">
        <name>updatePerson</name>
        <full_name>updatePerson</full_name>
        <docblock line="360">
          <description><![CDATA[update the person information]]></description>
          <long-description><![CDATA[<p>this function will update the information of the person with new inserted data from the view and save to the database</p>]]></long-description>
          <tag line="360" name="author" description="Alizai"/>
          <tag line="360" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="409" package="controllers">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="409">
          <description><![CDATA[delete user]]></description>
          <long-description><![CDATA[<p>this function delete the user with _$id_from user table</p>]]></long-description>
          <tag line="409" name="author" description="ashuqullah alizai"/>
          <tag line="409" name="param" description="is user ID" type="\int_type" variable="$id">
            <type by_reference="false">\int_type</type>
          </tag>
          <tag line="409" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="409">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="423" package="controllers">
        <name>_set_fields</name>
        <full_name>_set_fields</full_name>
        <docblock line="423">
          <description><![CDATA[set field value]]></description>
          <long-description><![CDATA[<p>this private fuction will set the field value for other fuctions to be used</p>]]></long-description>
          <tag line="423" name="author" description="Ashuqullah Alizai"/>
          <tag line="423" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="446" package="controllers">
        <name>_set_rules</name>
        <full_name>_set_rules</full_name>
        <docblock line="446">
          <description><![CDATA[set validation rules]]></description>
          <long-description><![CDATA[<p>set validation rule for inserted data in the text field of veiw</p>]]></long-description>
          <tag line="446" name="author" description="Ashuqullah Alizai"/>
          <tag line="446" name="return" description="message for required fields" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="463" package="controllers">
        <name>valid_date</name>
        <full_name>valid_date</full_name>
        <docblock line="463">
          <description><![CDATA[validate the data
fuction will validate the inserted data format]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="463" name="author" description="Ashuqullah Alizai"/>
          <tag line="463" name="return" description="true if match and false if not match" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="463" name="param" description="string" type="\$str" variable="$str">
            <type by_reference="false">\$str</type>
          </tag>
        </docblock>
        <argument line="463">
          <name>$str</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="489" package="controllers">
        <name>list_users</name>
        <full_name>list_users</full_name>
        <docblock line="489">
          <description><![CDATA[List current onsite user]]></description>
          <long-description><![CDATA[<p>if users types [Admin | Normal | Editor ] are currently in the site return his name</p>

<p>users types [Unconfirmed or logout] return his ip-address.</p>]]></long-description>
          <tag line="489" name="author" description="Ghezal Ahmad"/>
          <tag line="489" name="return" description="string user name for current users on the site" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="489" name="return" description="string ip address fo unconfirmed users" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="15" code="50018">No DocBlock was found for property $limit</error>
      <notice line="49" code="50013">Parameter $offset could not be found in index()</notice>
      <error line="125" code="50015">Argument $uid is missing from the Docblock of upgrade()</error>
    </parse_markers>
  </file>
  <file path="controllers/ajax.php" hash="fa20135f02dd1601f4aed0c4996534f2" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="controllers">
      <name>Ajax</name>
      <full_name>\Ajax</full_name>
      <extends>CI_Controller</extends>
      <docblock line="12">
        <description><![CDATA[controller for AJAX requests]]></description>
        <long-description><![CDATA[<p>This controller will handle all AJAX requests up to now.
If more AJAX-functionality is added, this should be split into thematically
organized controllers.</p>]]></long-description>
        <tag line="12" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="14" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="29" package="controllers">
        <name>qcomments</name>
        <full_name>qcomments</full_name>
        <docblock line="29">
          <description><![CDATA[asynchronously get comments for a question]]></description>
          <long-description><![CDATA[<p>calls <em>get_qcomments</em> from the comment model.
presents its data using the <em>ajax/comments</em> view.</p>]]></long-description>
          <tag line="29" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="helpers/loadview_helper.php" hash="fb6b2f18221893759b48ebe72efa93da" package="Default">
    <function namespace="" line="12" package="Default">
      <name>init_view_data</name>
      <full_name>\init_view_data</full_name>
      <docblock line="12">
        <description><![CDATA[Create dynamic navigation and other view variables]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="12" name="param" description="the main content to display" type="string" variable="$content">
          <type by_reference="false">string</type>
        </tag>
        <tag line="12" name="param" description="the array that will be passed to the view" type="array" variable="$data">
          <type by_reference="false">array</type>
        </tag>
        <tag line="12" name="return" description="the updated data array" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="12">
        <name>$content</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="12">
        <name>$data</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="helpers/markdown_helper.php" hash="bd5182ae54ca797ec68c7fc6495e7bfe" package="Default">
    <include line="168" type="Include Once" package="Default">
      <name>smartypants.php</name>
    </include>
    <constant namespace="" line="15" package="Default">
      <name>MARKDOWN_VERSION</name>
      <full_name>\\MARKDOWN_VERSION</full_name>
      <value><![CDATA['1.0.1o']]></value>
    </constant>
    <constant namespace="" line="23" package="Default">
      <name>MARKDOWN_EMPTY_ELEMENT_SUFFIX</name>
      <full_name>\\MARKDOWN_EMPTY_ELEMENT_SUFFIX</full_name>
      <value><![CDATA[' />']]></value>
    </constant>
    <constant namespace="" line="26" package="Default">
      <name>MARKDOWN_TAB_WIDTH</name>
      <full_name>\\MARKDOWN_TAB_WIDTH</full_name>
      <value><![CDATA[4]]></value>
    </constant>
    <constant namespace="" line="34" package="Default">
      <name>MARKDOWN_WP_POSTS</name>
      <full_name>\\MARKDOWN_WP_POSTS</full_name>
      <value><![CDATA[NULL]]></value>
    </constant>
    <constant namespace="" line="35" package="Default">
      <name>MARKDOWN_WP_COMMENTS</name>
      <full_name>\\MARKDOWN_WP_COMMENTS</full_name>
      <value><![CDATA[NULL]]></value>
    </constant>
    <constant namespace="" line="41" package="Default">
      <name>MARKDOWN_PARSER_CLASS</name>
      <full_name>\\MARKDOWN_PARSER_CLASS</full_name>
      <value><![CDATA['Markdown_Parser']]></value>
    </constant>
    <function namespace="" line="43" package="Default">
      <name>Markdown</name>
      <full_name>\Markdown</full_name>
      <argument line="43">
        <name>$text</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="118" package="Default">
      <name>mdwp_add_p</name>
      <full_name>\mdwp_add_p</full_name>
      <argument line="118">
        <name>$text</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="126" package="Default">
      <name>mdwp_strip_p</name>
      <full_name>\mdwp_strip_p</full_name>
      <argument line="126">
        <name>$t</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="128" package="Default">
      <name>mdwp_hide_tags</name>
      <full_name>\mdwp_hide_tags</full_name>
      <argument line="128">
        <name>$text</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="132" package="Default">
      <name>mdwp_show_tags</name>
      <full_name>\mdwp_show_tags</full_name>
      <argument line="132">
        <name>$text</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="141" package="Default">
      <name>identify_modifier_markdown</name>
      <full_name>\identify_modifier_markdown</full_name>
    </function>
    <function namespace="" line="157" package="Default">
      <name>smarty_modifier_markdown</name>
      <full_name>\smarty_modifier_markdown</full_name>
      <argument line="157">
        <name>$text</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="" line="170" package="Default">
      <name>Textile</name>
      <full_name>\Textile</full_name>
      <extends/>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="171" package="Default">
        <name>TextileThis</name>
        <full_name>TextileThis</full_name>
        <argument line="171">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="171">
          <name>$lite</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="171">
          <name>$encode</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="177" package="Default">
        <name>TextileRestricted</name>
        <full_name>TextileRestricted</full_name>
        <argument line="177">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="177">
          <name>$lite</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="177">
          <name>$noimage</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="181" package="Default">
        <name>blockLite</name>
        <full_name>blockLite</full_name>
        <argument line="181">
          <name>$text</name>
=======
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="248" package="controllers">
        <name>addUser</name>
        <full_name>addUser</full_name>
        <docblock line="248">
          <description><![CDATA[add new user]]></description>
          <long-description><![CDATA[<p>this function is to create new user it will get the data for user from the addUser view and send to data base</p>]]></long-description>
          <tag line="248" name="author" description="alizai"/>
          <tag line="248" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="296" package="controllers">
        <name>view</name>
        <full_name>view</full_name>
        <docblock line="296">
          <description><![CDATA[show user details]]></description>
          <long-description><![CDATA[<p>this function will show details of the user with <em>id</em> specifyed as parameter</p>]]></long-description>
          <tag line="296" name="author" description="Ashuqullah Alizai"/>
          <tag line="296" name="param" description="is user ID" type="\int_type" variable="$id">
            <type by_reference="false">\int_type</type>
          </tag>
        </docblock>
        <argument line="296">
          <name>$id</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
    </class>
    <class final="false" abstract="false" namespace="" line="191" package="Default">
      <name>Markdown_Parser</name>
      <full_name>\Markdown_Parser</full_name>
      <extends/>
      <property final="false" static="false" visibility="public" line="195" namespace="" package="Default">
        <name>$nested_brackets_depth</name>
        <default><![CDATA[6]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="196" namespace="" package="Default">
        <name>$nested_brackets_re</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="198" namespace="" package="Default">
        <name>$nested_url_parenthesis_depth</name>
        <default><![CDATA[4]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="199" namespace="" package="Default">
        <name>$nested_url_parenthesis_re</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="202" namespace="" package="Default">
        <name>$escape_chars</name>
        <default><![CDATA['\\`*_{}[]()>#+-.!']]></default>
      </property>
      <property final="false" static="false" visibility="public" line="203" namespace="" package="Default">
        <name>$escape_chars_re</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="206" namespace="" package="Default">
        <name>$empty_element_suffix</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="207" namespace="" package="Default">
        <name>$tab_width</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="210" namespace="" package="Default">
        <name>$no_markup</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="211" namespace="" package="Default">
        <name>$no_entities</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="214" namespace="" package="Default">
        <name>$predef_urls</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="215" namespace="" package="Default">
        <name>$predef_titles</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="243" namespace="" package="Default">
        <name>$urls</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="244" namespace="" package="Default">
        <name>$titles</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="245" namespace="" package="Default">
        <name>$html_hashes</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="248" namespace="" package="Default">
        <name>$in_anchor</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="314" namespace="" package="Default">
        <name>$document_gamut</name>
        <default><![CDATA[array('stripLinkDefinitions' => 20, 'runBasicBlockGamut' => 30)]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="540" namespace="" package="Default">
        <name>$block_gamut</name>
        <default><![CDATA[array('doHeaders' => 10, 'doHorizontalRules' => 20, 'doLists' => 40, 'doCodeBlocks' => 50, 'doBlockQuotes' => 60)]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="602" namespace="" package="Default">
        <name>$span_gamut</name>
        <default><![CDATA[array('parseSpan' => NULL, 'doImages' => 10, 'doAnchors' => 20, 'doAutoLinks' => 30, 'encodeAmpsAndAngles' => 40, 'doItalicsAndBold' => 50, 'doHardBreaks' => 60)]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="1005" namespace="" package="Default">
        <name>$list_level</name>
        <default><![CDATA[0]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="1119" namespace="" package="Default">
        <name>$em_relist</name>
        <default><![CDATA[array('' => '(?:(?<!\\*)\\*(?!\\*)|(?<!_)_(?!_))(?=\\S|$)(?![\\.,:;]\\s)', '*' => '(?<=\\S|^)(?<!\\*)\\*(?!\\*)', '_' => '(?<=\\S|^)(?<!_)_(?!_)')]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="1124" namespace="" package="Default">
        <name>$strong_relist</name>
        <default><![CDATA[array('' => '(?:(?<!\\*)\\*\\*(?!\\*)|(?<!_)__(?!_))(?=\\S|$)(?![\\.,:;]\\s)', '**' => '(?<=\\S|^)(?<!\\*)\\*\\*(?!\\*)', '__' => '(?<=\\S|^)(?<!_)__(?!_)')]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="1129" namespace="" package="Default">
        <name>$em_strong_relist</name>
        <default><![CDATA[array('' => '(?:(?<!\\*)\\*\\*\\*(?!\\*)|(?<!_)___(?!_))(?=\\S|$)(?![\\.,:;]\\s)', '***' => '(?<=\\S|^)(?<!\\*)\\*\\*\\*(?!\\*)', '___' => '(?<=\\S|^)(?<!_)___(?!_)')]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="1134" namespace="" package="Default">
        <name>$em_strong_prepared_relist</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="1589" namespace="" package="Default">
        <name>$utf8_strlen</name>
        <default><![CDATA['mb_strlen']]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="218" package="Default">
        <name>Markdown_Parser</name>
        <full_name>Markdown_Parser</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="251" package="Default">
        <name>setup</name>
        <full_name>setup</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="264" package="Default">
        <name>teardown</name>
        <full_name>teardown</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="275" package="Default">
        <name>transform</name>
        <full_name>transform</full_name>
        <argument line="275">
          <name>$text</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="321" package="controllers">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="321">
          <description><![CDATA[retrive current data for update]]></description>
          <long-description><![CDATA[<p>this function will retrive existing data for a user with given id <em>$id</em> for updating and will load the data in the update view</p>]]></long-description>
          <tag line="321" name="param" description="is user ID" type="\int_type" variable="$id">
            <type by_reference="false">\int_type</type>
          </tag>
          <tag line="321" name="author" description="Alizai"/>
          <tag line="321" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="321">
          <name>$id</name>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="360" package="controllers">
        <name>updatePerson</name>
        <full_name>updatePerson</full_name>
        <docblock line="360">
          <description><![CDATA[update the person information]]></description>
          <long-description><![CDATA[<p>this function will update the information of the person with new inserted data from the view and save to the database</p>]]></long-description>
          <tag line="360" name="author" description="Alizai"/>
          <tag line="360" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="409" package="controllers">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="409">
          <description><![CDATA[delete user]]></description>
          <long-description><![CDATA[<p>this function delete the user with _$id_from user table</p>]]></long-description>
          <tag line="409" name="author" description="ashuqullah alizai"/>
          <tag line="409" name="param" description="is user ID" type="\int_type" variable="$id">
            <type by_reference="false">\int_type</type>
          </tag>
          <tag line="409" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="409">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="423" package="controllers">
        <name>_set_fields</name>
        <full_name>_set_fields</full_name>
        <docblock line="423">
          <description><![CDATA[set field value]]></description>
          <long-description><![CDATA[<p>this private fuction will set the field value for other fuctions to be used</p>]]></long-description>
          <tag line="423" name="author" description="Ashuqullah Alizai"/>
          <tag line="423" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="446" package="controllers">
        <name>_set_rules</name>
        <full_name>_set_rules</full_name>
        <docblock line="446">
          <description><![CDATA[set validation rules]]></description>
          <long-description><![CDATA[<p>set validation rule for inserted data in the text field of veiw</p>]]></long-description>
          <tag line="446" name="author" description="Ashuqullah Alizai"/>
          <tag line="446" name="return" description="message for required fields" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="463" package="controllers">
        <name>valid_date</name>
        <full_name>valid_date</full_name>
        <docblock line="463">
          <description><![CDATA[validate the data
fuction will validate the inserted data format]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="463" name="author" description="Ashuqullah Alizai"/>
          <tag line="463" name="return" description="true if match and false if not match" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="463" name="param" description="string" type="\$str" variable="$str">
            <type by_reference="false">\$str</type>
          </tag>
        </docblock>
        <argument line="463">
          <name>$str</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="489" package="controllers">
        <name>list_users</name>
        <full_name>list_users</full_name>
        <docblock line="489">
          <description><![CDATA[List current onsite user]]></description>
          <long-description><![CDATA[<p>if users types [Admin | Normal | Editor ] are currently in the site return his name</p>

<p>users types [Unconfirmed or logout] return his ip-address.</p>]]></long-description>
          <tag line="489" name="author" description="Ghezal Ahmad"/>
          <tag line="489" name="return" description="string user name for current users on the site" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="489" name="return" description="string ip address fo unconfirmed users" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="15" code="50018">No DocBlock was found for property $limit</error>
      <notice line="49" code="50013">Parameter $offset could not be found in index()</notice>
      <error line="125" code="50015">Argument $uid is missing from the Docblock of upgrade()</error>
    </parse_markers>
  </file>
  <file path="controllers/main.php" hash="94a70afbfa645273c166affe16ed6d79" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Main</name>
      <full_name>\Main</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[the main controller]]></description>
        <long-description><![CDATA[<p>Handles the basic site functionality. Browsing questions and answers, etc.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads question_model, answer_model, main_lang.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="46" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="46">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>every complete html-page sent to the client is constructed here.
for the documentation of the $data array contents that are passed to the view
see the comments in views/main_view.php</p>]]></long-description>
          <tag line="46" name="param" description="what should appear in the body" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="46">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="59" package="controllers">
        <name>home</name>
        <full_name>home</full_name>
        <docblock line="59">
          <description><![CDATA[home view]]></description>
          <long-description><![CDATA[<p>this is where the default route and the home links will point to.
it just calls an appropriate function.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="controllers">
        <name>questions</name>
        <full_name>questions</full_name>
        <docblock line="74">
          <description><![CDATA[show a list of questions]]></description>
          <long-description><![CDATA[<p>the paginated <em>qlist</em> view is shown, representing a clickable list of questions.
clicking on a question will display its details (answers, etc.)</p>]]></long-description>
          <tag line="74" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="74" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="97" package="controllers">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="97">
          <description><![CDATA[shows a list of questions filtered after one condition]]></description>
          <long-description><![CDATA[<p>show the paginated <em>qlist</em> view with the questions matching a filter.</p>]]></long-description>
          <tag line="97" name="param" description="the filter name can be userID, catID or search" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="the parameter of the filter, can be userID, fieldID, catID or searchTerm" type="string|int" variable="$param">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="97" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="97" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$filter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$param</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="controllers">
        <name>qshow</name>
        <full_name>qshow</full_name>
        <docblock line="120">
          <description><![CDATA[show one question]]></description>
          <long-description><![CDATA[<p>the <em>qdetails</em> view is shown, representing a question and its answers.</p>]]></long-description>
          <tag line="120" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="controllers">
        <name>view</name>
        <full_name>view</full_name>
        <docblock line="140">
          <description><![CDATA[show a certain body page]]></description>
          <long-description><![CDATA[<p>this function shows a certain (static) page from the views/body directory.
use this for static content like: about, contact, terms-of-use, etc.</p>]]></long-description>
          <tag line="140" name="param" description="the name of the page (without extension) in views/body" type="string" variable="$page">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="160" package="controllers">
        <name>view_account</name>
        <full_name>view_account</full_name>
        <docblock line="160">
          <description><![CDATA[shows the User Account Information]]></description>
          <long-description><![CDATA[<p>this function will retreive account data from the database about the logged in user
first it will check if the user is logged in or not and than will retrieve each field into the array
this will than load the my_account form and pass the array created from the user account data</p>]]></long-description>
          <tag line="160" name="param" description="" type="" variable=""/>
          <tag line="160" name="return" description="Author Sayed Ahmad" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <notice line="160" code="50013">Parameter  could not be found in view_account()</notice>
    </parse_markers>
  </file>
  <file path="controllers/edit.php" hash="7ae2d592bbd0c48cdccb7103720cae84" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Edit</name>
      <full_name>\Edit</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[the edit controller]]></description>
        <long-description><![CDATA[<p>Handles forms to ask, answer and edit questions, answers and comments</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads question_model, answer_model, comment_model, main_lang.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="48">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>every complete html-page sent to the client is constructed here.
for the documentation of the $data array contents that are passed to the view
see the comments in views/main_view.php</p>]]></long-description>
          <tag line="48" name="param" description="what should appear in the body" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="controllers">
        <name>question</name>
        <full_name>question</full_name>
        <docblock line="67">
          <description><![CDATA[Create a new question or edit an existing one]]></description>
          <long-description><![CDATA[<p>This Method is used to  checke the user questions, if the question  belongs to the current user, then the form will display with content of current quesiton
The form will contain Question Title, Question Body and a drop down list for choosing category of the question
if the user update the question the form first would be validated according to the pre existed rules of the form validation
if the user entered valid data then the quesiton will be created or edited.
If the quesiton does not belongs to the user the user will be redirected to the last visited page</p>]]></long-description>
          <tag line="67" name="author" description="Abdulaziz Akbary and Hamidullah Khanzai"/>
          <tag line="67" name="param" description="the id of the question to edit. if left blank, create a new question." type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="67" name="retrun" description="void The user will redirecte to the new edited or inserted question to qshow page."/>
        </docblock>
        <argument line="67">
          <name>$qid</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="145" package="controllers">
        <name>answer</name>
        <full_name>answer</full_name>
        <docblock line="145">
          <description><![CDATA[creation and edition of answer]]></description>
          <long-description><![CDATA[<p>create a new answer or edit an existing one</p>]]></long-description>
          <tag line="145" name="param" description="the id of the question to answer." type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="145" name="param" description="optional, the id of the answer, if left blank, create a new answer." type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$aid</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="231" package="controllers">
        <name>delete_answer</name>
        <full_name>delete_answer</full_name>
        <docblock line="231">
          <description><![CDATA[delete user's answer]]></description>
          <long-description><![CDATA[<p>This function is for deleting a login user's answer</p>]]></long-description>
          <tag line="231" name="param" description="the id of the answer" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="231">
          <name>$aid</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="257" package="controllers">
        <name>comment</name>
        <full_name>comment</full_name>
        <docblock line="257">
          <description><![CDATA[Creates a new comment or edits an existing one]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="257" name="author" description="Foawziah and Huma"/>
          <tag line="257" name="param" description="the id of the question to comment on" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="257" name="param" description="the id of the answer" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="257" name="param" description="optional, the commentID, if left blank, create a new comment" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="257" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="257">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="257">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="257">
          <name>$cid</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="300" package="controllers">
        <name>process_comment</name>
        <full_name>process_comment</full_name>
        <docblock line="300">
          <description><![CDATA[Processes the 'create' and 'update' functionalities]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="300" name="author" description="Foawziah and Huma"/>
          <tag line="300" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="346" package="controllers">
        <name>delete_comment</name>
        <full_name>delete_comment</full_name>
        <docblock line="346">
          <description><![CDATA[Processes the deletion functionality]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="346" name="author" description="Foawziah and Huma"/>
          <tag line="346" name="param" description="the id of the comment" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="346" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="147">every message should be in selected language</todo>
      <todo line="265">localize</todo>
      <todo line="285">localize</todo>
      <todo line="310">localize</todo>
    </markers>
  </file>
  <file path="controllers/user.php" hash="4716403e24337f1af2740161f7970fe9" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>User</name>
      <full_name>\User</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[the user controller]]></description>
        <long-description><![CDATA[<p>Handles logging in and registering users.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="19" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads: user_model, main_lang</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="39" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="39">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>This loads views for the registration, failed-login, etc. screens</p>]]></long-description>
          <tag line="39" name="param" description="what should appear as content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="controllers">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="65">
          <description><![CDATA[function for user login:]]></description>
          <long-description><![CDATA[<p>This function check the following condition, and perform the task
Getting values (username, password) from login form and checking it in database
also login form have an optional checkbox field (remember) this function also check
if someone checked this remember  checkbox, so it will create a cookie on client computer
which will be exist till 3 days, otherwise cookies will be delete
if user login failed so a failed(username) function will be called and this failed fuction
is counting that how much time login is failed if it was more than 3 times and new recover page
will open to user.
if user login successfully session data will be set for this user where
userid, username, usertype, login(true, false) will store
when user data set in the sessioin the user will be redirect to the last visiting place
which will take from session data. (last_visited)</p>]]></long-description>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="controllers">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="102">
          <description><![CDATA[Function for logging out:]]></description>
          <long-description><![CDATA[<p>Session data of the current user will unset here:
login userid(uid) usertype username
will redirect after loging out, to the last visited place</p>]]></long-description>
          <tag line="102" name="param" description="void" type="\:" variable="">
            <type by_reference="false">\:</type>
          </tag>
          <tag line="102" name="return" description="void" type="\:">
            <type by_reference="false">\:</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="127" package="controllers">
        <name>failed</name>
        <full_name>failed</full_name>
        <docblock line="127">
          <description><![CDATA[Function to count userlogin failing:]]></description>
          <long-description><![CDATA[<p>This funciton is for counting user login failing and to show login failed page, or account recover page
It checks wheather the failed_logins variable set in the session data or not if not,
it make a failed_logins index and storing 1st time login fail or if the failed_logins
was already set in the session data it just increment it (last_value + 1)
than it set a data array to store error and username there,
This function also check if the user login failed less than 3 times it will redirect to the login_failed page
and if the login failed 3 times it will redirect user to recover page, where he/she can recoreved his/her password</p>]]></long-description>
          <tag line="127" name="Note" description=": Error message taken from Language helper class, lang('message_index'); it return the specified error&#10;message in current language."/>
          <tag line="127" name="param" description="it represent username default-value = ''" type="String" variable="$user">
            <type by_reference="false">String</type>
          </tag>
          <tag line="127" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$user</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="139" package="controllers">
        <name>update_user</name>
        <full_name>update_user</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="161" package="controllers">
        <name>register</name>
        <full_name>register</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="177" package="controllers">
        <name>view_account</name>
        <full_name>view_account</full_name>
        <docblock line="177">
          <description><![CDATA[shows the User Account Information]]></description>
          <long-description><![CDATA[<p>this function will retreive account data from the database about the logged in user
first it will check if the user is logged in or not and than will retrieve each field into the array
this will than load the my_account form and pass the array created from the user account data</p>]]></long-description>
          <tag line="177" name="param" description="" type="" variable=""/>
          <tag line="177" name="return" description="Author Sayed Ahmad" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="201" package="controllers">
        <name>recover</name>
        <full_name>recover</full_name>
        <argument line="201">
          <name>$user</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="45">Document the login(), logout() and failed() function. Change the implementation of failed() so it accepts only 3 failed password logins. After the third failed login the user should be sent to the recover page (user/recover/$username).</todo>
    </markers>
    <parse_markers>
      <notice line="102" code="50013">Parameter  could not be found in logout()</notice>
      <error line="139" code="50010">No DocBlock was found for method update_user()</error>
      <error line="161" code="50010">No DocBlock was found for method register()</error>
      <notice line="177" code="50013">Parameter  could not be found in view_account()</notice>
      <error line="201" code="50010">No DocBlock was found for method recover()</error>
    </parse_markers>
  </file>
  <file path="controllers/test.php" hash="8c3e4a7a14f798c44ac3b0df98425b51" package="Default">
    <class final="false" abstract="false" namespace="" line="13" package="controllers">
      <name>Test</name>
      <full_name>\Test</full_name>
      <extends>CI_Controller</extends>
      <docblock line="13">
        <description><![CDATA[the test controller]]></description>
        <long-description><![CDATA[<p>A controller for testing model.
In the wiki there is a short howto that explains the testing process
The comments in this file however should be self-explanatory.</p>]]></long-description>
        <tag line="13" name="package" description="controllers"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="" package="Default">
        <name>$result</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads the model you want to test.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="controllers">
        <name>_remap</name>
        <full_name>_remap</full_name>
        <argument line="36">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="controllers">
        <name>_report</name>
        <full_name>_report</full_name>
        <argument line="45">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$title</name>
          <default><![CDATA['Unnamed']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="controllers">
        <name>test1</name>
        <full_name>test1</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="controllers">
        <name>test2</name>
        <full_name>test2</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="controllers">
        <name>multitest</name>
        <full_name>multitest</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="16" code="50018">No DocBlock was found for property $result</error>
      <error line="36" code="50010">No DocBlock was found for method _remap()</error>
      <error line="45" code="50010">No DocBlock was found for method _report()</error>
      <error line="55" code="50010">No DocBlock was found for method test1()</error>
      <error line="70" code="50010">No DocBlock was found for method test2()</error>
      <error line="76" code="50010">No DocBlock was found for method multitest()</error>
    </parse_markers>
  </file>
  <file path="controllers/ajax.php" hash="fa20135f02dd1601f4aed0c4996534f2" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="controllers">
      <name>Ajax</name>
      <full_name>\Ajax</full_name>
      <extends>CI_Controller</extends>
      <docblock line="12">
        <description><![CDATA[controller for AJAX requests]]></description>
        <long-description><![CDATA[<p>This controller will handle all AJAX requests up to now.
If more AJAX-functionality is added, this should be split into thematically
organized controllers.</p>]]></long-description>
        <tag line="12" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="14" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="29" package="controllers">
        <name>qcomments</name>
        <full_name>qcomments</full_name>
        <docblock line="29">
          <description><![CDATA[asynchronously get comments for a question]]></description>
          <long-description><![CDATA[<p>calls <em>get_qcomments</em> from the comment model.
presents its data using the <em>ajax/comments</em> view.</p>]]></long-description>
          <tag line="29" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
<<<<<<< HEAD
  <file path="helpers/formee_helper.php" hash="0944eccdd279a5c82829a4158dded156" package="Default">
    <constant namespace="" line="16" package="Default">
      <name>DIV_CLEAR</name>
      <full_name>\\DIV_CLEAR</full_name>
      <value><![CDATA[NULL]]></value>
    </constant>
    <function namespace="" line="11" package="Default">
      <name>formee_open</name>
      <full_name>\formee_open</full_name>
      <docblock line="11">
        <description><![CDATA[Open a Formee-form]]></description>
=======
  <file path="helpers/loadview_helper.php" hash="fb6b2f18221893759b48ebe72efa93da" package="Default">
    <function namespace="" line="12" package="Default">
      <name>init_view_data</name>
      <full_name>\init_view_data</full_name>
      <docblock line="12">
        <description><![CDATA[Create dynamic navigation and other view variables]]></description>
>>>>>>> 488fc57fad52e73e7bc00d865ee43c386e4c6de3
        <long-description><![CDATA[]]></long-description>
        <tag line="11" name="param" description="Submit action URI (e.g. main/home)" type="string" variable="$action">
          <type by_reference="false">string</type>
        </tag>
        <tag line="11" name="param" description="options to pass on. class will be overwritten." type="array" variable="$options">
          <type by_reference="false">array</type>
        </tag>
        <tag line="11" name="return" description="contains html to open the form" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="11">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="11">
        <name>$options</name>
        <default><![CDATA[array()]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="24" package="Default">
      <name>formee_div</name>
      <full_name>\formee_div</full_name>
      <docblock line="24">
        <description><![CDATA[open a layout div, using Formee-layout (of12).]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="param" description="how many of 12 layout columns should the contained elements use. If 0 close a div tag." type="int" variable="$of12">
          <type by_reference="false">int</type>
        </tag>
        <tag line="24" name="param" description="clear start new row" type="bool" variable="$clear">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="24" name="return" description="contains the generated html" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="24">
        <name>$of12</name>
        <default><![CDATA[0]]></default>
        <type/>
      </argument>
      <argument line="24">
        <name>$clear</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="39" package="Default">
      <name>formee_button</name>
      <full_name>\formee_button</full_name>
      <docblock line="39">
        <description><![CDATA[create a formee submit button]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="39" name="param" description="the name and id of the button" type="string" variable="$name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="39" name="param" description="the value" type="string" variable="$value">
          <type by_reference="false">string</type>
        </tag>
        <tag line="39" name="return" description="contains the generated html" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="39">
        <name>$name</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="39">
        <name>$value</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="helpers/formee_helper.php" hash="0944eccdd279a5c82829a4158dded156" package="Default">
    <constant namespace="" line="16" package="Default">
      <name>DIV_CLEAR</name>
      <full_name>\\DIV_CLEAR</full_name>
      <value><![CDATA[NULL]]></value>
    </constant>
    <function namespace="" line="11" package="Default">
      <name>formee_open</name>
      <full_name>\formee_open</full_name>
      <docblock line="11">
        <description><![CDATA[Open a Formee-form]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="11" name="param" description="Submit action URI (e.g. main/home)" type="string" variable="$action">
          <type by_reference="false">string</type>
        </tag>
        <tag line="11" name="param" description="options to pass on. class will be overwritten." type="array" variable="$options">
          <type by_reference="false">array</type>
        </tag>
        <tag line="11" name="return" description="contains html to open the form" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="11">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="11">
        <name>$options</name>
        <default><![CDATA[array()]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="24" package="Default">
      <name>formee_div</name>
      <full_name>\formee_div</full_name>
      <docblock line="24">
        <description><![CDATA[open a layout div, using Formee-layout (of12).]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="param" description="how many of 12 layout columns should the contained elements use. If 0 close a div tag." type="int" variable="$of12">
          <type by_reference="false">int</type>
        </tag>
        <tag line="24" name="param" description="clear start new row" type="bool" variable="$clear">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="24" name="return" description="contains the generated html" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="24">
        <name>$of12</name>
        <default><![CDATA[0]]></default>
        <type/>
      </argument>
      <argument line="24">
        <name>$clear</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="39" package="Default">
      <name>formee_button</name>
      <full_name>\formee_button</full_name>
      <docblock line="39">
        <description><![CDATA[create a formee submit button]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="39" name="param" description="the name and id of the button" type="string" variable="$name">
          <type by_reference="false">string</type>
        </tag>
        <tag line="39" name="param" description="the value" type="string" variable="$value">
          <type by_reference="false">string</type>
        </tag>
        <tag line="39" name="return" description="contains the generated html" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="39">
        <name>$name</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="39">
        <name>$value</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="controllers" full_name="controllers"/>
  <package name="models" full_name="models"/>
  <namespace name="" full_name=""/>
  <marker count="6">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
