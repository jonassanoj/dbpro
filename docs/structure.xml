<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a6" title="">
  <file path="models/category_model.php" hash="0fd8426812a459db5037e295ac47c0ee" package="Default">
    <class final="false" abstract="false" namespace="" line="23" package="models">
      <extends>CI_Model</extends>
      <name>Category_model</name>
      <full_name>\Category_model</full_name>
      <docblock line="23">
        <description><![CDATA[The category model]]></description>
        <long-description><![CDATA[<p>This model allows us to add, update, retrieve and delete category from category table.</p>

<p>It uses the following database:</p>

<ul>
<li><em>goftogo</em></li>
<li><em>User</em> (read only)</li>
</ul>

<p>It uses the following tables of goftogo database:</p>

<ul>
<li><em>Category</em></li>
<li><em>User</em> (read only)</li>
</ul>]]></long-description>
        <tag line="23" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="37" package="models">
        <name>add_cat</name>
        <full_name>add_cat</full_name>
        <docblock line="37">
          <description><![CDATA[Add new category.]]></description>
          <long-description><![CDATA[<p>This function will add new category to the Category tables and a specified field table Category tables.</p>]]></long-description>
          <tag line="37" name="author" description="Abdulaziz Akbary"/>
          <tag line="37" name="param" description="the catName, means category-Name." type="string" variable="$catName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="the fieldID, means field-ID." type="int" variable="$fieldID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="37" name="return" description="containing a category ID." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$fieldID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="56" package="models">
        <name>update_cat</name>
        <full_name>update_cat</full_name>
        <docblock line="56">
          <description><![CDATA[Update category.]]></description>
          <long-description><![CDATA[<p>This function is used to update previouse existed category in a Category tables.</p>]]></long-description>
          <tag line="56" name="author" description="Abdulaziz Akbary"/>
          <tag line="56" name="param" description="the catID, means category-ID." type="int" variable="$catID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="56" name="param" description="the catName, means category-Name." type="string" variable="$catName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="return" description="containing a category ID." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="models">
        <name>get_categories</name>
        <full_name>get_categories</full_name>
        <docblock line="75">
          <description><![CDATA[Retrieving all category.]]></description>
          <long-description><![CDATA[<p>This function will return all categories belongs to a specific field from Category tables.</p>]]></long-description>
          <tag line="75" name="author" description="Abdulaziz Akbary"/>
          <tag line="75" name="param" description="the fieldID, means field-ID." type="int" variable="$fieldID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="75" name="return" description="containing all columns and rows of Category table." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$fieldID</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="models">
        <name>delete_cat</name>
        <full_name>delete_cat</full_name>
        <docblock line="93">
          <description><![CDATA[Delete a category.]]></description>
          <long-description><![CDATA[<p>This function is used to delete a specific category from a Category tables.</p>]]></long-description>
          <tag line="93" name="author" description="Abdulaziz Akbary"/>
          <tag line="93" name="param" description="the catID, means category-ID." type="int" variable="$catID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="93" name="return" description="" type="Void">
            <type by_reference="false">Void</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="3">complete the category_model documentation, using phpdoc comments like in question_model.php</todo>
    </markers>
  </file>
  <file path="models/question_model.php" hash="7488068140547dec675938121e70362f" package="Default">
    <class final="false" abstract="false" namespace="" line="15" package="models">
      <extends>CI_Model</extends>
      <name>Question_model</name>
      <full_name>\Question_model</full_name>
      <docblock line="15">
        <description><![CDATA[the question model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for questions.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Question</em></li>
<li><em>Answer</em> (read only)</li>
</ul>]]></long-description>
        <tag line="15" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="models">
        <name>get_list</name>
        <full_name>get_list</full_name>
        <docblock line="43">
          <description><![CDATA[retrieve a sorted and paginated question list]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>

<p>The array <em>$filter</em> can be used to filter the result according to certain criteria. The array may contain the following keys:</p>

<ul>
<li>userID: show only questions posted by a certain user id</li>
<li>catID: show only questions in a specific category id</li>
<li>fieldID: show only questions of a category that belong to a specific field id</li>
<li>search: a search term as a string. Words separated by a whitespace are ANDed.</li>
</ul>

<p><strong>Usage Example</strong>:
get the first 10 questions matching the terms <em>php</em> and <em>apache</em> :</p>

<blockquote>
  <p>get_list(0, 10, array('search'=>'php apache'))
  get the questions 6-10 with <em>catId</em> 4
  get_list(5, 10, array('category'=>4))</p>
</blockquote>]]></long-description>
          <tag line="43" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="43" name="param" description="the amount of questions to retrieve" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="43" name="param" description="the optional filter to be applied to the results" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="43" name="return" description="holds question objects with a questionID and its title" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$limit</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="models">
        <name>get_count</name>
        <full_name>get_count</full_name>
        <docblock line="60">
          <description><![CDATA[count the questions matching a certain filter.]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="60" name="param" description="the optional filter, see the get_list documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="60" name="return" description="the amount of questions matching $filter" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="models">
        <name>get_details</name>
        <full_name>get_details</full_name>
        <docblock line="74">
          <description><![CDATA[all the information about one question.]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="74" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="74" name="return" description="a single question object, containing column values as attributes." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="89" package="models">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="89">
          <description><![CDATA[create a filter for the where-clause]]></description>
          <long-description><![CDATA[<p>A private function used by <em>get_count</em> and <em>get_list</em>. It takes the $filter$ array (as described in the <em>getlist</em> documentation)
and returns an array that can be passed to the db->where() active record function.</p>]]></long-description>
          <tag line="89" name="param" description="the filter, see the get_list documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="89" name="return" description="a list of key-&gt;value conditions applied to the query" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$filter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="90">implement the filter function so that it works as documented.</todo>
    </markers>
  </file>
  <file path="models/field_model.php" hash="1609eaf8befe030634c58c037d8e430e" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="models">
      <extends>CI_Model</extends>
      <name>Field_model</name>
      <full_name>\Field_model</full_name>
      <docblock line="12">
        <description><![CDATA[this model is for fields]]></description>
        <long-description><![CDATA[<p>Field_model: this class provide interfaces for geting
adding, deleting fields, from database, (Field) table</p>]]></long-description>
        <tag line="12" name="author" description="Sayed Ahmad Mahboobi"/>
        <tag line="12" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="25" package="models">
        <name>get_fields</name>
        <full_name>get_fields</full_name>
        <docblock line="25">
          <description><![CDATA[this function is for geting field]]></description>
          <long-description><![CDATA[<p>get_fields(): this function select all rows from Field table</p>]]></long-description>
          <tag line="25" name="author" description="Sayed Ahmad Mahbobi"/>
          <tag line="25" name="return" description="Array: it return an array of all rows in the Field table" type="\:">
            <type by_reference="false">\:</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="models">
        <name>add_field</name>
        <full_name>add_field</full_name>
        <docblock line="42">
          <description><![CDATA[it adds records in the field table]]></description>
          <long-description><![CDATA[<p>add_field(): This fuction add a new field into Field table</p>]]></long-description>
          <tag line="42" name="author" description="Sayed Ahmad Mahboobi"/>
          <tag line="42" name="param" description="(String: needs a parameter which represent a field name)" type="string" variable="$fieldName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="new_inserted_id (int: it return the new iserted field id)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$fieldName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="59" package="models">
        <name>delete_field</name>
        <full_name>delete_field</full_name>
        <docblock line="59">
          <description><![CDATA[deletes the feilds]]></description>
          <long-description><![CDATA[<p>delete_field(): This fuction delete a field from field table
Function takes an arguments which will be fieldID</p>]]></long-description>
          <tag line="59" name="author" description="Sayed Ahmad Mahboobi"/>
          <tag line="59" name="param" description="(int: ID of the field to be delete)" type="int" variable="$fieldID">
            <type by_reference="false">int</type>
          </tag>
          <tag line="59" name="return" description="void" type="\:">
            <type by_reference="false">\:</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$fieldID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/answer_model.php" hash="d312a3b7865b3328b9235b946c0345a4" package="Default">
    <class final="false" abstract="false" namespace="" line="14" package="models">
      <extends>CI_Model</extends>
      <name>Answer_model</name>
      <full_name>\Answer_model</full_name>
      <docblock line="14">
        <description><![CDATA[the answer model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Answer</em></li>
</ul>]]></long-description>
        <tag line="14" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="25" package="models">
        <name>get_answers</name>
        <full_name>get_answers</full_name>
        <docblock line="25">
          <description><![CDATA[return the answers for a question]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="25" name="param" description="the id of the question we want answers for" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="25" name="return" description="holds answer objects with fileds for all database columns" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="models/comment_model.php" hash="1d12911faeac6ee9129d77331aa92fc7" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <extends>CI_Model</extends>
      <name>Comment_model</name>
      <full_name>\Comment_model</full_name>
      <docblock line="16">
        <description><![CDATA[the comment model]]></description>
        <long-description><![CDATA[<p>Allows to retrieve and post comments for questions and answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Comment</em></li>
<li><em>User</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="models">
        <name>get_qcomments</name>
        <full_name>get_qcomments</full_name>
        <docblock line="28">
          <description><![CDATA[retrieve comments for a question]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="28" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="28" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="models">
        <name>get_acomments</name>
        <full_name>get_acomments</full_name>
        <docblock line="45">
          <description><![CDATA[retrieve comments for an answer]]></description>
          <long-description><![CDATA[<p>Returns all comments for an answer, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="45" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="45" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="models">
        <name>create_qcomment</name>
        <full_name>create_qcomment</full_name>
        <argument line="53">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="53">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="53">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="models">
        <name>create_acomment</name>
        <full_name>create_acomment</full_name>
        <argument line="57">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="57">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="57">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="models">
        <name>update_comment</name>
        <full_name>update_comment</full_name>
        <argument line="62">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="66" package="models">
        <name>delete_comment</name>
        <full_name>delete_comment</full_name>
        <argument line="66">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="52">Implement create_qcomment and create_acomment so that it adds a question or answer comment to the database and returns the new comment's commentID. Then create its documentation, using phpdoc comments. See get_acomments for an example.</todo>
      <todo line="61">Implement update_comment so that it updates the body of the comment specified by $cid. Then implement delete_comment so that it deletes the comment specified by $cid. Create documentation for both functions, using phpdoc comments. See get_acomments for an example.</todo>
    </markers>
    <parse_markers>
      <error line="53" code="50010">No DocBlock was found for method create_qcomment()</error>
      <error line="57" code="50010">No DocBlock was found for method create_acomment()</error>
      <error line="62" code="50010">No DocBlock was found for method update_comment()</error>
      <error line="66" code="50010">No DocBlock was found for method delete_comment()</error>
    </parse_markers>
  </file>
  <file path="models/user_model.php" hash="92834606e415b52e13924c13bc5e4da0" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <extends>CI_Model</extends>
      <name>User_model</name>
      <full_name>\User_model</full_name>
      <docblock line="16">
        <description><![CDATA[the user model]]></description>
        <long-description><![CDATA[<p>User management. CRUD for users, their types and their fields.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>User</em></li>
<li><em>UserType</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="31" package="models">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="31">
          <description><![CDATA[Checks if the username exists]]></description>
          <long-description><![CDATA[<p>The <em>$name</em> is compared to the <em>userName</em> in User table.</p>

<p>The <em>$password</em> is compared if it is eqaul to that userName's password.</p>]]></long-description>
          <tag line="31" name="author" description="Huma Yari"/>
          <tag line="31" name="param" description="The username" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="The password" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="the userID if exits or 0" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="31">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="models">
        <name>delete_user</name>
        <full_name>delete_user</full_name>
        <docblock line="54">
          <description><![CDATA[Deletes a user]]></description>
          <long-description><![CDATA[<p>The given userID is compared to the <em>userID</em> of the User table.</p>

<p>The user will be deleted if that userID is found.</p>]]></long-description>
          <tag line="54" name="author" description="Huma Yari"/>
          <tag line="54" name="param" description="The userID" type="int" variable="$uid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="models">
        <name>add_user</name>
        <full_name>add_user</full_name>
        <docblock line="70">
          <description><![CDATA[adding new user]]></description>
          <long-description><![CDATA[<p>adding new user in the User table with initial data *(username,password and email address)</p>]]></long-description>
          <tag line="70" name="author" description="ASHUQULLAH ALIZAI"/>
          <tag line="70" name="param" description="is the username for the user" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="is password specified by user" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="is email specified by user" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="inserted userID" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="95" package="models">
        <name>check_userName</name>
        <full_name>check_userName</full_name>
        <docblock line="95">
          <description><![CDATA[checking the existancy of userName]]></description>
          <long-description><![CDATA[<p>checks if the userName exist on the user table</p>]]></long-description>
          <tag line="95" name="author" description="ASHUQULLAH ALIZAI"/>
          <tag line="95" name="param" description="is the user name for user who wants to register for first time" type="\string_type" variable="$username">
            <type by_reference="false">\string_type</type>
          </tag>
          <tag line="95" name="return" description="userID" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="104" package="models">
        <name>update_user</name>
        <full_name>update_user</full_name>
        <argument line="104">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="104">
          <name>$user_data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="models">
        <name>get_userdata</name>
        <full_name>get_userdata</full_name>
        <argument line="110">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="models">
        <name>change_usertype</name>
        <full_name>change_usertype</full_name>
        <argument line="122">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$utid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="134" package="models">
        <name>get_usertypes</name>
        <full_name>get_usertypes</full_name>
        <docblock line="134">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="144" package="models">
        <name>get_usertype</name>
        <full_name>get_usertype</full_name>
        <docblock line="144">
          <description><![CDATA[it is to return usertype]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="144">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="148" package="models">
        <name>get_field</name>
        <full_name>get_field</full_name>
        <argument line="148">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="58">implement the add_user function. A new unconfirmed user (userTypeID=0) is created with the given parameters. Set the accountCreationDate to the current date. Document the function using phpdoc.</todo>
      <todo line="103">Find out how the update_user() function can be used. Then document it using phpdoc. Use question_model::get_list() as an example.</todo>
      <todo line="109">This function should return the user object for the user with id $uid. Additionally to the data from the User table, it should contain the users category (userType) and field (fieldName). Create phpdoc for this function. Note: you will also need to update the class' phpdoc.'</todo>
      <todo line="121">implement change_usertype() so it changes the user specified by $uid to category number $utid. Document this function and get_usertypes using phpdoc.</todo>
      <todo line="139">implement and document get_usertype() and get_field(). Both return a single integer indicating the usertypeID or fieldID of the user.</todo>
    </markers>
    <parse_markers>
      <error line="104" code="50010">No DocBlock was found for method update_user()</error>
      <error line="110" code="50010">No DocBlock was found for method get_userdata()</error>
      <error line="122" code="50010">No DocBlock was found for method change_usertype()</error>
      <error line="134" code="50012">No short description for method get_usertypes()</error>
      <error line="144" code="50015">Argument $uid is missing from the Docblock of get_usertype()</error>
      <error line="148" code="50010">No DocBlock was found for method get_field()</error>
    </parse_markers>
  </file>
  <file path="controllers/util.php" hash="0f1df72c2d63af6801622fbe5cb8ef4c" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <extends>CI_Controller</extends>
      <name>Util</name>
      <full_name>\Util</full_name>
      <docblock line="11">
        <description><![CDATA[Utility controller]]></description>
        <long-description><![CDATA[<p>a controller containing utility functions. It uses no views but sends the user back to the last URI saved in the session.
e.g. used for changing the language globally.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="controllers">
        <name>lang</name>
        <full_name>lang</full_name>
        <docblock line="20">
          <description><![CDATA[Load a language]]></description>
          <long-description><![CDATA[<p>Changing the language my setting the session variable language.</p>]]></long-description>
          <tag line="20" name="param" description="the language to load, named like the folder containing the language files" type="string" variable="$language">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="20">
          <name>$language</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="controllers/test.php" hash="8019cc55cb8b4614400dbb8108d396e9" package="Default">
    <class final="false" abstract="false" namespace="" line="13" package="controllers">
      <extends>CI_Controller</extends>
      <name>Test</name>
      <full_name>\Test</full_name>
      <docblock line="13">
        <description><![CDATA[the test controller]]></description>
        <long-description><![CDATA[<p>A controller for testing model.
In the wiki there is a short howto that explains the testing process
The comments in this file however should be self-explanatory.</p>]]></long-description>
        <tag line="13" name="package" description="controllers"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="" package="Default">
        <name>$result</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads the model you want to test.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="controllers">
        <name>_remap</name>
        <full_name>_remap</full_name>
        <argument line="36">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="controllers">
        <name>_report</name>
        <full_name>_report</full_name>
        <argument line="45">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$title</name>
          <default><![CDATA['Unnamed']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="controllers">
        <name>test1</name>
        <full_name>test1</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="69" package="controllers">
        <name>test2</name>
        <full_name>test2</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="controllers">
        <name>multitest</name>
        <full_name>multitest</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="16" code="50018">No DocBlock was found for property $result</error>
      <error line="36" code="50010">No DocBlock was found for method _remap()</error>
      <error line="45" code="50010">No DocBlock was found for method _report()</error>
      <error line="55" code="50010">No DocBlock was found for method test1()</error>
      <error line="69" code="50010">No DocBlock was found for method test2()</error>
      <error line="75" code="50010">No DocBlock was found for method multitest()</error>
    </parse_markers>
  </file>
  <file path="controllers/user.php" hash="efdd3d2f46eee4a7a47b7c6f7b5e703b" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <extends>CI_Controller</extends>
      <name>User</name>
      <full_name>\User</full_name>
      <docblock line="11">
        <description><![CDATA[the user controller]]></description>
        <long-description><![CDATA[<p>Handles logging in and registering users.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="19" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads: user_model, main_lang</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="46" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="46">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>This loads views for the registration, failed-login, etc. screens
The following parts are sent in order:</p>

<ul>
<li><em>include/header.php</em></li>
<li><em>header/simple.php</em> : no login box</li>
<li><em>leftnav/default.php</em>: the default content of the navigation bar</li>
<li><em>body</em>/$body_view_: the body content given as a parameter</li>
<li><em>include/footer.php</em></li>
</ul>]]></long-description>
          <tag line="46" name="param" description="what should appear in the body" type="string" variable="$body_view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$body_view</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="46">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="controllers">
        <name>login</name>
        <full_name>login</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="controllers">
        <name>logout</name>
        <full_name>logout</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="133" package="controllers">
        <name>failed</name>
        <full_name>failed</full_name>
        <argument line="133">
          <name>$user</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="controllers">
        <name>register</name>
        <full_name>register</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="151" package="controllers">
        <name>recover</name>
        <full_name>recover</full_name>
        <argument line="151">
          <name>$user</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="54">Document the login(), logout() and failed() function. Change the implementation of failed() so it accepts only 3 failed password logins. After the third failed login the user should be sent to the recover page (user/recover/$username).</todo>
    </markers>
    <parse_markers>
      <error line="73" code="50010">No DocBlock was found for method login()</error>
      <error line="110" code="50010">No DocBlock was found for method logout()</error>
      <error line="133" code="50010">No DocBlock was found for method failed()</error>
      <error line="146" code="50010">No DocBlock was found for method register()</error>
      <error line="151" code="50010">No DocBlock was found for method recover()</error>
    </parse_markers>
  </file>
  <file path="controllers/ajax.php" hash="6218514efa36404ec9c3f12ee71aa974" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="controllers">
      <extends>CI_Controller</extends>
      <name>Ajax</name>
      <full_name>\Ajax</full_name>
      <docblock line="12">
        <description><![CDATA[controller for AJAX requests]]></description>
        <long-description><![CDATA[<p>This controller will handle all AJAX requests up to now.
If more AJAX-functionality is added, this should be split into thematically
organized controllers.</p>]]></long-description>
        <tag line="12" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="14" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="29" package="controllers">
        <name>qcomments</name>
        <full_name>qcomments</full_name>
        <docblock line="29">
          <description><![CDATA[asynchronously get comments for a question]]></description>
          <long-description><![CDATA[<p>calls <em>get_qcomments</em> from the comment model.
presents its data using the <em>ajax/comments</em> view.</p>]]></long-description>
          <tag line="29" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="controllers/main.php" hash="62ef0288ab35a856bfdfb16ab92522f0" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <extends>CI_Controller</extends>
      <name>Main</name>
      <full_name>\Main</full_name>
      <docblock line="11">
        <description><![CDATA[the main controller]]></description>
        <long-description><![CDATA[<p>Handles the basic site functionality. Browsing questions and answers, etc.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads question_model, answer_model, main_lang.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="50" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <argument line="50">
          <name>$body_view</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="controllers">
        <name>home</name>
        <full_name>home</full_name>
        <docblock line="76">
          <description><![CDATA[home view]]></description>
          <long-description><![CDATA[<p>this is where the default route and the home links will point to.
it just calls an appropriate function.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="controllers">
        <name>questions</name>
        <full_name>questions</full_name>
        <docblock line="91">
          <description><![CDATA[show a list of questions]]></description>
          <long-description><![CDATA[<p>the paginated <em>qlist</em> view is shown, representing a clickable list of questions.
clicking on a question will display its details (answers, etc.)</p>]]></long-description>
          <tag line="91" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="91" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="controllers">
        <name>field</name>
        <full_name>field</full_name>
        <argument line="102">
          <name>$fid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="102">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="106" package="controllers">
        <name>search</name>
        <full_name>search</full_name>
        <argument line="106">
          <name>$term</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="controllers">
        <name>qshow</name>
        <full_name>qshow</full_name>
        <docblock line="120">
          <description><![CDATA[show one question]]></description>
          <long-description><![CDATA[<p>the <em>qdetails</em> view is shown, representing a question and its answers.</p>]]></long-description>
          <tag line="120" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="controllers">
        <name>view</name>
        <full_name>view</full_name>
        <docblock line="140">
          <description><![CDATA[show a certain body page]]></description>
          <long-description><![CDATA[<p>this function shows a certain (static) page from the views/body directory.
use this for static content like: about, contact, terms-of-use, etc.</p>]]></long-description>
          <tag line="140" name="param" description="the name of the page (without extension) in views/body" type="string" variable="$page">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="49">extend the _loadviews() function so it loads a different sidebar, depending on the type of user.</todo>
      <todo line="103">implement field($fid,$offset). It should display a paginated view of all the questions that belong to categories in a field. use the already documented $filter feature of the question_model. You only need to make changes in the body of this function.</todo>
      <todo line="107">implement search($term,$offset). It should display a paginated view of the search results. use the already documented $filter feature of the question_model. You only need to make changes in the body of this function.</todo>
    </markers>
    <parse_markers>
      <error line="50" code="50010">No DocBlock was found for method _loadviews()</error>
      <error line="102" code="50010">No DocBlock was found for method field()</error>
      <error line="106" code="50010">No DocBlock was found for method search()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="controllers" full_name="controllers"/>
  <package name="models" full_name="models"/>
  <namespace name="" full_name=""/>
  <marker count="13">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
