<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a5" title="">
  <file path="models/question_model.php" hash="dde058db937df9bbeca6c71b78ac87fc" package="Default">
    <class final="false" abstract="false" namespace="" line="15" package="models">
      <name>Question_model</name>
      <full_name>\Question_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="15">
        <description><![CDATA[the question model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for questions.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Question</em></li>
<li><em>Answer</em> (read only)</li>
</ul>]]></long-description>
        <tag line="15" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="models">
        <name>get_list</name>
        <full_name>get_list</full_name>
        <docblock line="42">
          <description><![CDATA[retrieve a sorted and paginated question list]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>

<p>The array <em>$filter</em> can be used to filter the result according to certain criteria. The array may contain the following keys:</p>

<ul>
<li>user: show only questions posted by a certain user</li>
<li>category: show only questions in a specific category id</li>
<li>search: a search term as a string. Words separated by a whitespace are ANDed.</li>
</ul>

<p><strong>Usage Example</strong>:
get the first 10 questions matching the terms <em>php</em> and <em>apache</em> :</p>

<blockquote>
  <p>get_list(0, 10, array('search'=>'php apache'))
  get the questions 6-10 with <em>catId</em> 4
  get_list(5, 10, array('category'=>4))</p>
</blockquote>]]></long-description>
          <tag line="42" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="42" name="param" description="the amount of questions to retrieve" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="42" name="param" description="the optional filter to be applied to the results" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="return" description="holds question objects with a questionID and its title" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="42">
          <name>$limit</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="42">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="59" package="models">
        <name>get_count</name>
        <full_name>get_count</full_name>
        <docblock line="59">
          <description><![CDATA[count the questions matching a certain filter.]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="59" name="param" description="the optional filter, see the get_list documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="59" name="return" description="the amount of questions matching $filter" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="models">
        <name>get_details</name>
        <full_name>get_details</full_name>
        <docblock line="73">
          <description><![CDATA[all the information about one question.]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="73" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="73" name="return" description="a single question object, containing column values as attributes." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="88" package="models">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="88">
          <description><![CDATA[create a filter for the where-clause]]></description>
          <long-description><![CDATA[<p>A private function used by <em>get_count</em> and <em>get_list</em>. It takes the $filter$ array (as described in the <em>getlist</em> documentation)
and returns an array that can be passed to the db->where() active record function.</p>]]></long-description>
          <tag line="88" name="param" description="the filter, see the get_list documentation" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="88" name="return" description="a list of key-&gt;value conditions applied to the query" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$filter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="89">implement the filter function so that it works as documented.</todo>
    </markers>
  </file>
  <file path="models/user_model.php" hash="fc923a96c6987af54312c17332ecb0f8" package="Default">
    <class final="false" abstract="false" namespace="" line="17" package="Default">
      <name>User_model</name>
      <full_name>\User_model</full_name>
      <extends>CI_Model</extends>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="Default">
        <name>login</name>
        <full_name>login</full_name>
        <argument line="20">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="20">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="Default">
        <name>delete_user</name>
        <full_name>delete_user</full_name>
        <argument line="24">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="29" package="Default">
        <name>add_user</name>
        <full_name>add_user</full_name>
        <argument line="29">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="29">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="29">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="Default">
        <name>update_user</name>
        <full_name>update_user</full_name>
        <argument line="36">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$user_data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="Default">
        <name>get_userdata</name>
        <full_name>get_userdata</full_name>
        <argument line="42">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="46" package="Default">
        <name>change_usertype</name>
        <full_name>change_usertype</full_name>
        <argument line="46">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="46">
          <name>$utid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="50" package="Default">
        <name>get_usertypes</name>
        <full_name>get_usertypes</full_name>
      </method>
    </class>
    <markers>
      <todo line="15">adapt docu of every function according coding conventions</todo>
      <todo line="19">implement the login function. If the username exists, and the user's password is equal to $password it should return the userID, otherwise 0. Also implement delete_user(). Then create phpdoc comments for both functions.</todo>
      <todo line="28">implement the add_user function. A new unconfirmed user (userTypeID=0) is created with the given parameters. Set the accountCreationDate to the current date. Document the function using phpdoc.</todo>
      <todo line="35">Find out how the update_user() function can be used. Then document it using phpdoc. Use question_model::get_list() as an example.</todo>
      <todo line="41">This function should return the user object for the user with id $uid. Additionally to the data from the User table, it should contain the users category (userType) and field (fieldName). Create phpdoc for this function. Note: you will also need to update the class' phpdoc.'</todo>
      <todo line="45">implement change_usertype() so it changes the user specified by $uid to category number $utid. Document this function and get_usertypes using phpdoc.</todo>
    </markers>
    <parse_markers>
      <error line="17" code="50000">No DocBlock was found for \User_model</error>
      <error line="20" code="50010">No DocBlock was found for method login()</error>
      <error line="24" code="50010">No DocBlock was found for method delete_user()</error>
      <error line="29" code="50010">No DocBlock was found for method add_user()</error>
      <error line="36" code="50010">No DocBlock was found for method update_user()</error>
      <error line="42" code="50010">No DocBlock was found for method get_userdata()</error>
      <error line="46" code="50010">No DocBlock was found for method change_usertype()</error>
      <error line="50" code="50010">No DocBlock was found for method get_usertypes()</error>
    </parse_markers>
  </file>
  <file path="models/field_model.php" hash="9dbb68a8530d22fc34b9572ae50c5cc0" package="Default">
    <class final="false" abstract="false" namespace="" line="5" package="Default">
      <name>Field_model</name>
      <full_name>\Field_model</full_name>
      <extends>CI_Model</extends>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="8" package="Default">
        <name>get_fields</name>
        <full_name>get_fields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="15" package="Default">
        <name>add_field</name>
        <full_name>add_field</full_name>
        <argument line="15">
          <name>$fieldName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="21" package="Default">
        <name>delete_field</name>
        <full_name>delete_field</full_name>
        <argument line="21">
          <name>$fieldID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="3">complete field_model documentation according to the guidelines</todo>
    </markers>
    <parse_markers>
      <error line="5" code="50000">No DocBlock was found for \Field_model</error>
      <error line="8" code="50010">No DocBlock was found for method get_fields()</error>
      <error line="15" code="50010">No DocBlock was found for method add_field()</error>
      <error line="21" code="50010">No DocBlock was found for method delete_field()</error>
    </parse_markers>
  </file>
  <file path="models/category_model.php" hash="0af6523b4fb7798061199a1b60120fc1" package="Default">
    <class final="false" abstract="false" namespace="" line="5" package="Default">
      <name>Category_model</name>
      <full_name>\Category_model</full_name>
      <extends>CI_Model</extends>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="8" package="Default">
        <name>add_cat</name>
        <full_name>add_cat</full_name>
        <argument line="8">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="8">
          <name>$fieldID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="17" package="Default">
        <name>update_cat</name>
        <full_name>update_cat</full_name>
        <argument line="17">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="17">
          <name>$catName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="25" package="Default">
        <name>get_categories</name>
        <full_name>get_categories</full_name>
        <argument line="25">
          <name>$fieldID</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="32" package="Default">
        <name>delete_cat</name>
        <full_name>delete_cat</full_name>
        <argument line="32">
          <name>$catID</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="3">complete the category_model documentation, using phpdoc comments like in question_model.php</todo>
    </markers>
    <parse_markers>
      <error line="5" code="50000">No DocBlock was found for \Category_model</error>
      <error line="8" code="50010">No DocBlock was found for method add_cat()</error>
      <error line="17" code="50010">No DocBlock was found for method update_cat()</error>
      <error line="25" code="50010">No DocBlock was found for method get_categories()</error>
      <error line="32" code="50010">No DocBlock was found for method delete_cat()</error>
    </parse_markers>
  </file>
  <file path="models/comment_model.php" hash="1d12911faeac6ee9129d77331aa92fc7" package="Default">
    <class final="false" abstract="false" namespace="" line="16" package="models">
      <name>Comment_model</name>
      <full_name>\Comment_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="16">
        <description><![CDATA[the comment model]]></description>
        <long-description><![CDATA[<p>Allows to retrieve and post comments for questions and answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Comment</em></li>
<li><em>User</em> (read only)</li>
</ul>]]></long-description>
        <tag line="16" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="models">
        <name>get_qcomments</name>
        <full_name>get_qcomments</full_name>
        <docblock line="28">
          <description><![CDATA[retrieve comments for a question]]></description>
          <long-description><![CDATA[<p>Returns all comments for a question, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="28" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="28" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="models">
        <name>get_acomments</name>
        <full_name>get_acomments</full_name>
        <docblock line="45">
          <description><![CDATA[retrieve comments for an answer]]></description>
          <long-description><![CDATA[<p>Returns all comments for an answer, providing the <em>userName</em> of the commenter and the <em>body</em> of the comment.</p>]]></long-description>
          <tag line="45" name="param" description="the answerID" type="int" variable="$aid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="45" name="return" description="holds comment objects with userName and body properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="models">
        <name>create_qcomment</name>
        <full_name>create_qcomment</full_name>
        <argument line="53">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="53">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="53">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="models">
        <name>create_acomment</name>
        <full_name>create_acomment</full_name>
        <argument line="57">
          <name>$aid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="57">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="57">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="models">
        <name>update_comment</name>
        <full_name>update_comment</full_name>
        <argument line="62">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="66" package="models">
        <name>delete_comment</name>
        <full_name>delete_comment</full_name>
        <argument line="66">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="52">Implement create_qcomment and create_acomment so that it adds a question or answer comment to the database and returns the new comment's commentID. Then create its documentation, using phpdoc comments. See get_acomments for an example.</todo>
      <todo line="61">Implement update_comment so that it updates the body of the comment specified by $cid. Then implement delete_comment so that it deletes the comment specified by $cid. Create documentation for both functions, using phpdoc comments. See get_acomments for an example.</todo>
    </markers>
    <parse_markers>
      <error line="53" code="50010">No DocBlock was found for method create_qcomment()</error>
      <error line="57" code="50010">No DocBlock was found for method create_acomment()</error>
      <error line="62" code="50010">No DocBlock was found for method update_comment()</error>
      <error line="66" code="50010">No DocBlock was found for method delete_comment()</error>
    </parse_markers>
  </file>
  <file path="models/answer_model.php" hash="d312a3b7865b3328b9235b946c0345a4" package="Default">
    <class final="false" abstract="false" namespace="" line="14" package="models">
      <name>Answer_model</name>
      <full_name>\Answer_model</full_name>
      <extends>CI_Model</extends>
      <docblock line="14">
        <description><![CDATA[the answer model]]></description>
        <long-description><![CDATA[<p>Provides CRUD functionality for answers.</p>

<p>It uses the following database tables:</p>

<ul>
<li><em>Answer</em></li>
</ul>]]></long-description>
        <tag line="14" name="package" description="models"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="25" package="models">
        <name>get_answers</name>
        <full_name>get_answers</full_name>
        <docblock line="25">
          <description><![CDATA[return the answers for a question]]></description>
          <long-description><![CDATA[<p>the total amount of questions matching the filter criteria. see get_list documentation for details.</p>]]></long-description>
          <tag line="25" name="param" description="the id of the question we want answers for" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="25" name="return" description="holds answer objects with fileds for all database columns" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="controllers/main.php" hash="f95ddb461a7bc4a373ba4b16a2302b72" package="Default">
    <class final="false" abstract="false" namespace="" line="11" package="controllers">
      <name>Main</name>
      <full_name>\Main</full_name>
      <extends>CI_Controller</extends>
      <docblock line="11">
        <description><![CDATA[the main controller]]></description>
        <long-description><![CDATA[<p>Handles the basic site functionality. Browsing questions and answers, etc.</p>]]></long-description>
        <tag line="11" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="19" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="19">
          <description><![CDATA[constructor]]></description>
          <long-description><![CDATA[<p>loads: question_model, answer_model</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="controllers">
        <name>_loadviews</name>
        <full_name>_loadviews</full_name>
        <docblock line="45">
          <description><![CDATA[private helper function to build view]]></description>
          <long-description><![CDATA[<p>every complete html-page sent to the client is constructed here.
currently, mostly defaults are sent and only the body is changed dynamically.</p>

<p>The following parts are sent in order:</p>

<ul>
<li><em>templates/header.php</em></li>
<li><em>header/default.php</em> : the default content appearing in the header</li>
<li><em>leftnav/default.php</em>: the default content of the navigation bar</li>
<li><em>body</em>/$body_view_: the body content given as a parameter</li>
<li><em>templates/footer.php</em></li>
</ul>]]></long-description>
          <tag line="45" name="param" description="what should appear in the body" type="string" variable="$body_view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="param" description="The data array to pass on to the views" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$body_view</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="64" package="controllers">
        <name>home</name>
        <full_name>home</full_name>
        <docblock line="64">
          <description><![CDATA[home view]]></description>
          <long-description><![CDATA[<p>this is where the default route and the home links will point to.
it just calls an appropriate function.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="controllers">
        <name>questions</name>
        <full_name>questions</full_name>
        <docblock line="79">
          <description><![CDATA[show a list of questions]]></description>
          <long-description><![CDATA[<p>the paginated <em>qlist</em> view is shown, representing a clickable list of questions.
clicking on a question will display its details (answers, etc.)</p>]]></long-description>
          <tag line="79" name="param" description="the pagination offset" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="79" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="101" package="controllers">
        <name>qshow</name>
        <full_name>qshow</full_name>
        <docblock line="101">
          <description><![CDATA[show one question]]></description>
          <long-description><![CDATA[<p>the <em>qdetails</em> view is shown, representing a question and its answers.</p>]]></long-description>
          <tag line="101" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="101" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="121" package="controllers">
        <name>view</name>
        <full_name>view</full_name>
        <docblock line="121">
          <description><![CDATA[show a certain body page]]></description>
          <long-description><![CDATA[<p>this function shows a certain (static) page from the views/body directory.
use this for static content like: about, contact, terms-of-use, etc.</p>]]></long-description>
          <tag line="121" name="param" description="the name of the page (without extension) in views/body" type="string" variable="$page">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="controllers/user.php" hash="f485cba340892cdff422ad160e51e557" package="Default">
    <class final="false" abstract="false" namespace="" line="3" package="Default">
      <name>User</name>
      <full_name>\User</full_name>
      <extends>CI_Controller</extends>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="5" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="20" package="Default">
        <name>index</name>
        <full_name>index</full_name>
        <docblock line="20">
          <description><![CDATA[index funtion]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="Default">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="28">
          <description><![CDATA[logout funtion]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="Default">
        <name>update_profile</name>
        <full_name>update_profile</full_name>
        <docblock line="38">
          <description><![CDATA[function to show a page when user login]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>view_login</name>
        <full_name>view_login</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="Default">
        <name>view_registration_form</name>
        <full_name>view_registration_form</full_name>
        <docblock line="102">
          <description><![CDATA[funtion to show registration form]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="111" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="111">
          <description><![CDATA[funtion that have success message for user registration]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="154" package="Default">
        <name>forget_pass</name>
        <full_name>forget_pass</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="159" package="Default">
        <name>user_update</name>
        <full_name>user_update</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="217" package="Default">
        <name>user_fields</name>
        <full_name>user_fields</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="223" package="Default">
        <name>resend_email</name>
        <full_name>resend_email</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="246" package="Default">
        <name>send_mail</name>
        <full_name>send_mail</full_name>
        <argument line="246">
          <name>$email</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="246">
          <name>$message</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="268" package="Default">
        <name>reg_confirm</name>
        <full_name>reg_confirm</full_name>
        <argument line="268">
          <name>$userid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="309" package="Default">
        <name>get_date</name>
        <full_name>get_date</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="314" package="Default">
        <name>check_expiry</name>
        <full_name>check_expiry</full_name>
        <argument line="314">
          <name>$date</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="3" code="50000">No DocBlock was found for \User</error>
      <error line="5" code="50010">No DocBlock was found for method __construct()</error>
      <error line="62" code="50010">No DocBlock was found for method view_login()</error>
      <error line="154" code="50010">No DocBlock was found for method forget_pass()</error>
      <error line="159" code="50010">No DocBlock was found for method user_update()</error>
      <error line="217" code="50010">No DocBlock was found for method user_fields()</error>
      <error line="223" code="50010">No DocBlock was found for method resend_email()</error>
      <error line="246" code="50010">No DocBlock was found for method send_mail()</error>
      <error line="268" code="50010">No DocBlock was found for method reg_confirm()</error>
      <error line="309" code="50010">No DocBlock was found for method get_date()</error>
      <error line="314" code="50010">No DocBlock was found for method check_expiry()</error>
    </parse_markers>
  </file>
  <file path="controllers/ajax.php" hash="b9845f06bca2a8e815c99fb1b1b1b749" package="Default">
    <class final="false" abstract="false" namespace="" line="12" package="controllers">
      <name>Ajax</name>
      <full_name>\Ajax</full_name>
      <extends>CI_Controller</extends>
      <docblock line="12">
        <description><![CDATA[controller for AJAX requests]]></description>
        <long-description><![CDATA[<p>This controller will handle all AJAX requests up to now.
If more AJAX-functionality is added, this should be split into thematically
organized controllers.</p>]]></long-description>
        <tag line="12" name="package" description="controllers"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="14" package="controllers">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="29" package="controllers">
        <name>qcomments</name>
        <full_name>qcomments</full_name>
        <docblock line="29">
          <description><![CDATA[asynchronously get comments for a question]]></description>
          <long-description><![CDATA[<p>calls <em>get_qcomments</em> from the comment model.
presents its data using the <em>ajax/comments</em> view.</p>]]></long-description>
          <tag line="29" name="param" description="the questionID" type="int" variable="$qid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$qid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="controllers" full_name="controllers"/>
  <package name="models" full_name="models"/>
  <namespace name="" full_name=""/>
  <marker count="11">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
